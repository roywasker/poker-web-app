{"version":3,"file":"static/js/743.329cf543.chunk.js","mappings":"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","sources":["../node_modules/@mui/material/List/ListContext.js","../node_modules/@mui/material/utils/isHostComponent.js","data/firebase.ts","../node_modules/@mui/icons-material/esm/TrendingUp.js","../node_modules/@mui/icons-material/esm/TrendingDown.js","screens/PlayerBalanceScreen.tsx","../node_modules/@mui/material/ListItemText/listItemTextClasses.js","../node_modules/@mui/material/List/listClasses.js","../node_modules/@mui/material/List/List.js","../node_modules/@mui/material/utils/isMuiElement.js","../node_modules/@mui/utils/esm/isMuiElement/isMuiElement.js"],"sourcesContent":["'use client';\n\nimport * as React from 'react';\n\n/**\n * @ignore - internal component.\n */\nconst ListContext = /*#__PURE__*/React.createContext({});\nif (process.env.NODE_ENV !== 'production') {\n  ListContext.displayName = 'ListContext';\n}\nexport default ListContext;","/**\n * Determines if a given element is a DOM element name (i.e. not a React component).\n */\nfunction isHostComponent(element) {\n  return typeof element === 'string';\n}\nexport default isHostComponent;","import { initializeApp } from 'firebase/app';\nimport { \n  getDatabase, \n  ref, \n  set, \n  push, \n  get, \n  remove, \n  update,\n  query,\n  orderByChild,\n  startAt,\n  endAt\n} from 'firebase/database';\nimport { Player, Game, Transfer } from './models';\n\n// נגדיר את הטיפוס ישירות בקובץ במקום לייבא אותו\ninterface GamePlayerData {\n  playerName: string;\n  buyIn: number;\n  cashOut: number;\n  profit: number;\n}\n\n// Firebase configuration - replace with your own config\nconst firebaseConfig = {\n  // כאן הכנס את פרטי הקונפיגורציה האמיתיים שלך\n  apiKey: \"AIzaSyB_C62gqBeFuCIEkMrUr3tdEWTCIZX7RyA\",\n  authDomain: \"poker-967ea.firebaseapp.com\",\n  // השאר שדה זה ריק בכוונה\n  // databaseURL: \"https://poker-967ea.firebaseio.com\",\n  projectId: \"poker-967ea\",\n  storageBucket: \"poker-967ea.firebasestorage.app\",\n  messagingSenderId: \"349597163789\",\n  appId: \"1:349597163789:android:c2f23b99100e2176b81044\"\n};\n// Initialize Firebase\nconst app = initializeApp(firebaseConfig);\nconst database = getDatabase(app);\n\n\n// Players API\nexport const playersRef = ref(database, 'PlayersList');\n\nexport const addPlayer = async (name: string): Promise<string> => {\n  const newPlayerRef = push(playersRef);\n  const playerId = newPlayerRef.key as string;\n  \n  await set(newPlayerRef, {\n    id: playerId,\n    name: name,\n    balance: 0\n  });\n  \n  return playerId;\n};\n\nexport const getPlayers = async (): Promise<Player[]> => {\n  const snapshot = await get(playersRef);\n  const players: Player[] = [];\n  \n  if (snapshot.exists()) {\n    snapshot.forEach((childSnapshot) => {\n      const player = childSnapshot.val() as Player;\n      player.id = childSnapshot.key as string;\n      players.push(player);\n    });\n  }\n  \n  return players;\n};\n\nexport const updatePlayerBalance = async (playerId: string, newBalance: number): Promise<void> => {\n  console.log(\"Updating player balance for playerId:\", playerId, \"to newBalance:\", newBalance);\n  const playerRef = ref(database, `PlayersList/${playerId}`);\n  await update(playerRef, { balance: newBalance });\n};\n\n// Date list API\nexport const datesListRef = ref(database, 'dateList');\n\nexport const getDateList = async (): Promise<{ date: string, key: string }[]> => {\n  const snapshot = await get(datesListRef);\n  const dates: { date: string, key: string }[] = [];\n  \n  if (snapshot.exists()) {\n    snapshot.forEach((childSnapshot) => {\n      const date = childSnapshot.child('date').val() as string;\n      if (date) {\n        dates.push({\n          date: date,\n          key: childSnapshot.key as string\n        });\n      }\n    });\n  }\n  \n  // Sort dates in descending order (newest first)\n  return dates.sort((a, b) => new Date(b.date).getTime() - new Date(a.date).getTime());\n};\n\nexport const addDateToList = async (date: string): Promise<string> => {\n  // Extract just the date part (YYYY-MM-DD) from the date string\n  const datePart = date.split('T')[0];\n  \n  // Create a new entry in the dateList\n  const newDateRef = push(datesListRef);\n  const dateId = newDateRef.key as string;\n  \n  await set(newDateRef, {\n    date: datePart\n  });\n  \n  return dateId;\n};\n\n// Games API\nexport const gamesRef = ref(database, 'Games');\nexport const datesRef = ref(database, 'dateList');\n\nexport const addGame = async (gameData: { date: string, players: GamePlayerData[] }): Promise<string> => {\n  try {\n    // יצירת מזהה חדש עבור הרשומה של התאריך\n    const newDateRef = push(datesRef);\n    const dateId = newDateRef.key as string;\n    \n    if (!dateId) {\n      throw new Error('Failed to generate date ID');\n    }\n    \n    // שמירת פרטי התאריך\n    const dateData = {\n      date: gameData.date\n    };\n    \n    // שמירת התאריך\n    await set(newDateRef, dateData);\n    \n    // יצירת התייחסות לקולקציית שחקנים תחת התאריך הזה\n    const playerBalanceRef = ref(database, `dateList/${dateId}/playerBalance`);\n    \n    // שמירת כל שחקן עם המאזן שלו\n    for (const player of gameData.players) {\n      // יצירת מזהה חדש עבור כל שחקן\n      const playerRef = push(playerBalanceRef);\n      const playerId = playerRef.key;\n      \n      if (!playerId) {\n        throw new Error('Failed to generate player ID');\n      }\n      \n      // שמירת פרטי השחקן והמאזן שלו\n      const playerData = {\n        name: player.playerName,\n        balance: player.profit // או cashOut - buyIn\n      };\n      \n      await set(playerRef, playerData);\n    }\n    \n    return dateId;\n  } catch (error) {\n    console.error(\"Error adding game:\", error);\n    throw error;\n  }\n};\n\nexport const getGamesByDate = async (dateOrKey: string): Promise<Game[]> => {\n  // First, check if we're getting games by a dateList key\n  const dateListRef = ref(database, `dateList/${dateOrKey}`);\n  const dateSnapshot = await get(dateListRef);\n  \n  let dateString = dateOrKey;\n  \n  // If a valid date key was provided, get the date string from it\n  if (dateSnapshot.exists()) {\n    const date = dateSnapshot.child('date').val() as string;\n    if (date) {\n      dateString = date;\n    }\n  }\n  \n  // Use orderByChild and startAt/endAt for more efficient querying\n  // This filters the games on the server side before data is sent to client\n  const startDate = `${dateString}T00:00:00.000Z`;\n  const endDate = `${dateString}T23:59:59.999Z`;\n  \n  const gamesQuery = query(\n    gamesRef,\n    orderByChild('date'),\n    startAt(startDate),\n    endAt(endDate)\n  );\n  \n  const snapshot = await get(gamesQuery);\n  const games: Game[] = [];\n  \n  if (snapshot.exists()) {\n    snapshot.forEach((childSnapshot) => {\n      const game = childSnapshot.val() as Game;\n      games.push(game);\n    });\n  }\n  \n  return games;\n};\n\nexport const getAllGameDates = async (limit: number = 10, startDate?: string): Promise<string[]> => {\n  let gamesQuery;\n  \n  if (startDate) {\n    // Query games with dates before the startDate (for pagination)\n    gamesQuery = query(\n      gamesRef,\n      orderByChild('date'),\n      endAt(startDate)\n    );\n  } else {\n    // Query all games\n    gamesQuery = query(gamesRef, orderByChild('date'));\n  }\n  \n  const snapshot = await get(gamesQuery);\n  const dates = new Set<string>();\n  \n  if (snapshot.exists()) {\n    // Convert to array to handle pagination properly\n    const games: Game[] = [];\n    snapshot.forEach((childSnapshot) => {\n      games.push(childSnapshot.val() as Game);\n    });\n    \n    // Sort in reverse order (most recent first)\n    games.sort((a, b) => b.date.localeCompare(a.date));\n    \n    // Extract unique dates\n    for (const game of games) {\n      const datePart = game.date.split('T')[0];\n      dates.add(datePart);\n      \n      // Exit early if we've reached the limit\n      if (limit > 0 && dates.size >= limit) {\n        break;\n      }\n    }\n  }\n  \n  // Convert Set to Array and sort in descending order (newest first)\n  return Array.from(dates).sort().reverse();\n};\n\n// Transfers API\nexport const transfersRef = ref(database, 'Transfers');\n\nexport const addTransfer = async (transfer: Omit<Transfer, 'id'>): Promise<string> => {\n  const newTransferRef = push(transfersRef);\n  const transferId = newTransferRef.key as string;\n  \n  await set(newTransferRef, {\n    ...transfer,\n    id: transferId\n  });\n  \n  return transferId;\n};\n\nexport const getTransfers = async (): Promise<Transfer[]> => {\n  const snapshot = await get(transfersRef);\n  const transfers: Transfer[] = [];\n  \n  if (snapshot.exists()) {\n    snapshot.forEach((childSnapshot) => {\n      const transfer = childSnapshot.val() as Transfer;\n      transfers.push(transfer);\n    });\n  }\n  \n  return transfers;\n};\n\n// Player balance by date API\nexport const getPlayerBalanceByDate = async (dateKey: string): Promise<Player[]> => {\n  if (!dateKey) {\n    throw new Error(\"Please select a date\");\n  }\n  \n  const balanceRef = ref(database, `dateList/${dateKey}/playerBalance`);\n  const snapshot = await get(balanceRef);\n  const players: Player[] = [];\n  \n  if (snapshot.exists()) {\n    snapshot.forEach((playerSnapshot) => {\n      const name = playerSnapshot.child('name').val() as string;\n      const balance = playerSnapshot.child('balance').val() as number;\n      const id = playerSnapshot.key as string;\n      \n      if (name && balance !== undefined) {\n        players.push({\n          id,\n          name,\n          balance\n        });\n      }\n    });\n  }\n  \n  // Sort players by balance in descending order\n  return players.sort((a, b) => b.balance - a.balance);\n};\n\n/**\n * Updates the balances of all players after a game is finished\n * @param gameData - The data about the game including players and their profits\n * @returns Promise that resolves when all player balances have been updated\n */\nexport const updatePlayersBalancesAfterGame = async (gameData: { players: GamePlayerData[] }): Promise<void> => {\n  try {\n    // Get all players from the database\n    const allPlayers = await getPlayers();\n    \n    // Create a mapping for quick lookup of player data by name\n    const gamePlayerMap = new Map<string, GamePlayerData>();\n    gameData.players.forEach(player => {\n      gamePlayerMap.set(player.playerName, player);\n    });\n    \n    // Process each player\n    const updatePromises = allPlayers.map(player => {\n      // Check if this player participated in the game\n      const gamePlayerData = gamePlayerMap.get(player.name);\n      \n      if (gamePlayerData) {\n        // Calculate new balance\n        const newBalance = player.balance + gamePlayerData.profit;\n        \n        // Update the player's balance in the database\n        return updatePlayerBalance(player.id, newBalance);\n      }\n      \n      // Player didn't participate, no update needed\n      return Promise.resolve();\n    });\n    \n    // Wait for all updates to complete\n    await Promise.all(updatePromises);\n    \n  } catch (error) {\n    console.error(\"Error updating player balances after game:\", error);\n    throw error;\n  }\n}; ","\"use client\";\n\nimport createSvgIcon from \"./utils/createSvgIcon.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon(/*#__PURE__*/_jsx(\"path\", {\n  d: \"m16 6 2.29 2.29-4.88 4.88-4-4L2 16.59 3.41 18l6-6 4 4 6.3-6.29L22 12V6z\"\n}), 'TrendingUp');","\"use client\";\n\nimport createSvgIcon from \"./utils/createSvgIcon.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon(/*#__PURE__*/_jsx(\"path\", {\n  d: \"m16 18 2.29-2.29-4.88-4.88-4 4L2 7.41 3.41 6l6 6 4-4 6.3 6.29L22 12v6z\"\n}), 'TrendingDown');","import React, { useState, useEffect } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport {\r\n  Box,\r\n  Container,\r\n  Typography,\r\n  List,\r\n  ListItem,\r\n  ListItemText,\r\n  IconButton,\r\n  AppBar,\r\n  Toolbar,\r\n  Paper,\r\n  CircularProgress,\r\n  Divider,\r\n  Chip\r\n} from '@mui/material';\r\nimport ArrowBackIcon from '@mui/icons-material/ArrowBack';\r\nimport TrendingUpIcon from '@mui/icons-material/TrendingUp';\r\nimport TrendingDownIcon from '@mui/icons-material/TrendingDown';\r\nimport Routes from '../routes/Routes';\r\nimport { getPlayers } from '../data/firebase';\r\nimport { Player } from '../data/models';\r\n\r\nconst PlayerBalanceScreen: React.FC = () => {\r\n  const navigate = useNavigate();\r\n  const [players, setPlayers] = useState<Player[]>([]);\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  // Load players on component mount\r\n  useEffect(() => {\r\n    loadPlayers();\r\n  }, []);\r\n\r\n  const loadPlayers = async () => {\r\n    setLoading(true);\r\n    try {\r\n      const playersList = await getPlayers();\r\n      // Sort players by balance (descending)\r\n      playersList.sort((a, b) => b.balance - a.balance);\r\n      setPlayers(playersList);\r\n    } catch (error) {\r\n      console.error('Error loading players:', error);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Box sx={{ flexGrow: 1 }}>\r\n      <AppBar position=\"static\" sx={{ bgcolor: 'lightgray' }}>\r\n        <Toolbar>\r\n          <IconButton\r\n            edge=\"start\"\r\n            color=\"inherit\"\r\n            aria-label=\"back\"\r\n            onClick={() => navigate(Routes.HOME)}\r\n            sx={{ mr: 2 }}\r\n          >\r\n            <ArrowBackIcon />\r\n          </IconButton>\r\n          <Typography variant=\"h6\" component=\"div\" sx={{ flexGrow: 1 }}>\r\n            Player Balance\r\n          </Typography>\r\n        </Toolbar>\r\n      </AppBar>\r\n\r\n      <Container maxWidth=\"sm\" sx={{ mt: 4 }}>\r\n        <Paper elevation={3} sx={{ p: 3 }}>\r\n          <Typography variant=\"h6\" gutterBottom>\r\n            Players Balance\r\n          </Typography>\r\n          <Divider sx={{ mb: 2 }} />\r\n          \r\n          {loading ? (\r\n            <Box sx={{ display: 'flex', justifyContent: 'center', p: 3 }}>\r\n              <CircularProgress />\r\n            </Box>\r\n          ) : (\r\n            <List>\r\n              {players.length === 0 ? (\r\n                <ListItem>\r\n                  <ListItemText primary=\"No players found\" />\r\n                </ListItem>\r\n              ) : (\r\n                players.map((player) => (\r\n                  <ListItem\r\n                    key={player.id}\r\n                    secondaryAction={\r\n                      <Chip\r\n                        icon={player.balance >= 0 ? <TrendingUpIcon /> : <TrendingDownIcon />}\r\n                        label={`${player.balance} ₪`}\r\n                        color={player.balance >= 0 ? 'success' : 'error'}\r\n                        variant=\"outlined\"\r\n                      />\r\n                    }\r\n                  >\r\n                    <ListItemText\r\n                      primary={player.name}\r\n                    />\r\n                  </ListItem>\r\n                ))\r\n              )}\r\n            </List>\r\n          )}\r\n        </Paper>\r\n      </Container>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default PlayerBalanceScreen; ","import generateUtilityClasses from '@mui/utils/generateUtilityClasses';\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\nexport function getListItemTextUtilityClass(slot) {\n  return generateUtilityClass('MuiListItemText', slot);\n}\nconst listItemTextClasses = generateUtilityClasses('MuiListItemText', ['root', 'multiline', 'dense', 'inset', 'primary', 'secondary']);\nexport default listItemTextClasses;","import generateUtilityClasses from '@mui/utils/generateUtilityClasses';\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\nexport function getListUtilityClass(slot) {\n  return generateUtilityClass('MuiList', slot);\n}\nconst listClasses = generateUtilityClasses('MuiList', ['root', 'padding', 'dense', 'subheader']);\nexport default listClasses;","'use client';\n\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport composeClasses from '@mui/utils/composeClasses';\nimport { styled } from \"../zero-styled/index.js\";\nimport { useDefaultProps } from \"../DefaultPropsProvider/index.js\";\nimport ListContext from \"./ListContext.js\";\nimport { getListUtilityClass } from \"./listClasses.js\";\nimport { jsxs as _jsxs, jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    disablePadding,\n    dense,\n    subheader\n  } = ownerState;\n  const slots = {\n    root: ['root', !disablePadding && 'padding', dense && 'dense', subheader && 'subheader']\n  };\n  return composeClasses(slots, getListUtilityClass, classes);\n};\nconst ListRoot = styled('ul', {\n  name: 'MuiList',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, !ownerState.disablePadding && styles.padding, ownerState.dense && styles.dense, ownerState.subheader && styles.subheader];\n  }\n})({\n  listStyle: 'none',\n  margin: 0,\n  padding: 0,\n  position: 'relative',\n  variants: [{\n    props: ({\n      ownerState\n    }) => !ownerState.disablePadding,\n    style: {\n      paddingTop: 8,\n      paddingBottom: 8\n    }\n  }, {\n    props: ({\n      ownerState\n    }) => ownerState.subheader,\n    style: {\n      paddingTop: 0\n    }\n  }]\n});\nconst List = /*#__PURE__*/React.forwardRef(function List(inProps, ref) {\n  const props = useDefaultProps({\n    props: inProps,\n    name: 'MuiList'\n  });\n  const {\n    children,\n    className,\n    component = 'ul',\n    dense = false,\n    disablePadding = false,\n    subheader,\n    ...other\n  } = props;\n  const context = React.useMemo(() => ({\n    dense\n  }), [dense]);\n  const ownerState = {\n    ...props,\n    component,\n    dense,\n    disablePadding\n  };\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(ListContext.Provider, {\n    value: context,\n    children: /*#__PURE__*/_jsxs(ListRoot, {\n      as: component,\n      className: clsx(classes.root, className),\n      ref: ref,\n      ownerState: ownerState,\n      ...other,\n      children: [subheader, children]\n    })\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? List.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * If `true`, compact vertical padding designed for keyboard and mouse input is used for\n   * the list and list items.\n   * The prop is available to descendant components as the `dense` context.\n   * @default false\n   */\n  dense: PropTypes.bool,\n  /**\n   * If `true`, vertical padding is removed from the list.\n   * @default false\n   */\n  disablePadding: PropTypes.bool,\n  /**\n   * The content of the subheader, normally `ListSubheader`.\n   */\n  subheader: PropTypes.node,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default List;","import isMuiElement from '@mui/utils/isMuiElement';\nexport default isMuiElement;","import * as React from 'react';\nexport default function isMuiElement(element, muiNames) {\n  return /*#__PURE__*/React.isValidElement(element) && muiNames.indexOf(\n  // For server components `muiName` is avaialble in element.type._payload.value.muiName\n  // relevant info - https://github.com/facebook/react/blob/2807d781a08db8e9873687fccc25c0f12b4fb3d4/packages/react/src/ReactLazy.js#L45\n  // eslint-disable-next-line no-underscore-dangle\n  element.type.muiName ?? element.type?._payload?.value?.muiName) !== -1;\n}"],"names":["React","element","app","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","database","getDatabase","playersRef","ref","addPlayer","async","newPlayerRef","push","playerId","key","set","id","name","balance","getPlayers","snapshot","get","players","exists","forEach","childSnapshot","player","val","datesListRef","getDateList","dates","date","child","sort","a","b","Date","getTime","datesRef","addGame","newDateRef","dateId","Error","dateData","gameData","playerBalanceRef","playerRef","playerData","playerName","profit","error","console","getPlayerBalanceByDate","dateKey","balanceRef","playerSnapshot","undefined","updatePlayersBalancesAfterGame","allPlayers","gamePlayerMap","Map","updatePromises","map","gamePlayerData","newBalance","log","update","updatePlayerBalance","Promise","resolve","all","createSvgIcon","_jsx","d","PlayerBalanceScreen","navigate","useNavigate","setPlayers","useState","loading","setLoading","useEffect","loadPlayers","playersList","_jsxs","Box","sx","flexGrow","children","AppBar","position","bgcolor","Toolbar","IconButton","edge","color","onClick","Routes","HOME","mr","ArrowBackIcon","Typography","variant","component","Container","maxWidth","mt","Paper","elevation","p","gutterBottom","Divider","mb","display","justifyContent","CircularProgress","List","length","ListItem","ListItemText","primary","secondaryAction","Chip","icon","TrendingUpIcon","TrendingDownIcon","label","getListItemTextUtilityClass","slot","generateUtilityClass","generateUtilityClasses","getListUtilityClass","ListRoot","styled","overridesResolver","props","styles","ownerState","root","disablePadding","padding","dense","subheader","listStyle","margin","variants","_ref","style","paddingTop","paddingBottom","_ref2","inProps","useDefaultProps","className","other","context","classes","slots","composeClasses","useUtilityClasses","ListContext","Provider","value","as","clsx","muiNames","indexOf","type","muiName","_payload"],"sourceRoot":""}