{"version":3,"file":"static/js/720.1d93c846.chunk.js","mappings":"oMAyBA,MAYMA,GAAMC,EAAAA,EAAAA,IAZW,CAErBC,OAAQ,0CACRC,WAAY,8BAGZC,UAAW,cACXC,cAAe,kCACfC,kBAAmB,eACnBC,MAAO,kDAIHC,GAAWC,EAAAA,EAAAA,IAAYT,GAIhBU,GAAaC,EAAAA,EAAAA,IAAIH,EAAU,eAE3BI,EAAYC,UACvB,MAAMC,GAAeC,EAAAA,EAAAA,IAAKL,GACpBM,EAAWF,EAAaG,IAQ9B,aANMC,EAAAA,EAAAA,IAAIJ,EAAc,CACtBK,GAAIH,EACJI,KAAMA,EACNC,QAAS,IAGJL,CAAQ,EAGJM,EAAaT,UACxB,MAAMU,QAAiBC,EAAAA,EAAAA,IAAId,GACrBe,EAAoB,GAU1B,OARIF,EAASG,UACXH,EAASI,SAASC,IAChB,MAAMC,EAASD,EAAcE,MAC7BD,EAAOV,GAAKS,EAAcX,IAC1BQ,EAAQV,KAAKc,EAAO,IAIjBJ,CAAO,EAUHM,GAAepB,EAAAA,EAAAA,IAAIH,EAAU,YAE7BwB,EAAcnB,UACzB,MAAMU,QAAiBC,EAAAA,EAAAA,IAAIO,GACrBE,EAAyC,GAe/C,OAbIV,EAASG,UACXH,EAASI,SAASC,IAChB,MAAMM,EAAON,EAAcO,MAAM,QAAQL,MACrCI,GACFD,EAAMlB,KAAK,CACTmB,KAAMA,EACNjB,IAAKW,EAAcX,KAEvB,IAKGgB,EAAMG,MAAK,CAACC,EAAGC,IAAM,IAAIC,KAAKD,EAAEJ,MAAMM,UAAY,IAAID,KAAKF,EAAEH,MAAMM,WAAU,EAoBzEC,IADW9B,EAAAA,EAAAA,IAAIH,EAAU,UACdG,EAAAA,EAAAA,IAAIH,EAAU,aAEzBkC,EAAU7B,UACrB,IAEE,MAAM8B,GAAa5B,EAAAA,EAAAA,IAAK0B,GAClBG,EAASD,EAAW1B,IAE1B,IAAK2B,EACH,MAAM,IAAIC,MAAM,8BAIlB,MAAMC,EAAW,CACfZ,KAAMa,EAASb,YAIXhB,EAAAA,EAAAA,IAAIyB,EAAYG,GAGtB,MAAME,GAAmBrC,EAAAA,EAAAA,IAAIH,EAAU,YAAYoC,mBAGnD,IAAK,MAAMf,KAAUkB,EAAStB,QAAS,CAErC,MAAMwB,GAAYlC,EAAAA,EAAAA,IAAKiC,GAGvB,IAFiBC,EAAUhC,IAGzB,MAAM,IAAI4B,MAAM,gCAIlB,MAAMK,EAAa,CACjB9B,KAAMS,EAAOsB,WACb9B,QAASQ,EAAOuB,cAGZlC,EAAAA,EAAAA,IAAI+B,EAAWC,EACvB,CAEA,OAAON,CACT,CAAE,MAAOS,GAEP,MADAC,QAAQD,MAAM,qBAAsBA,GAC9BA,CACR,GAqHWE,IA7Be5C,EAAAA,EAAAA,IAAIH,EAAU,aA6BJK,UACpC,IAAK2C,EACH,MAAM,IAAIX,MAAM,wBAGlB,MAAMY,GAAa9C,EAAAA,EAAAA,IAAIH,EAAU,YAAYgD,mBACvCjC,QAAiBC,EAAAA,EAAAA,IAAIiC,GACrBhC,EAAoB,GAmB1B,OAjBIF,EAASG,UACXH,EAASI,SAAS+B,IAChB,MAAMtC,EAAOsC,EAAevB,MAAM,QAAQL,MACpCT,EAAUqC,EAAevB,MAAM,WAAWL,MAC1CX,EAAKuC,EAAezC,IAEtBG,QAAoBuC,IAAZtC,GACVI,EAAQV,KAAK,CACXI,KACAC,OACAC,WAEJ,IAKGI,EAAQW,MAAK,CAACC,EAAGC,IAAMA,EAAEjB,QAAUgB,EAAEhB,SAAQ,GAQzCuC,EAAiC/C,UAC5C,IAEE,MAAMgD,QAAmBvC,IAGnBwC,EAAgB,IAAIC,IAC1BhB,EAAStB,QAAQE,SAAQE,IACvBiC,EAAc5C,IAAIW,EAAOsB,WAAYtB,EAAO,IAI9C,MAAMmC,EAAiBH,EAAWI,KAAIpC,IAEpC,MAAMqC,EAAiBJ,EAActC,IAAIK,EAAOT,MAEhD,GAAI8C,EAAgB,CAElB,MAAMC,EAAatC,EAAOR,QAAU6C,EAAed,OAGnD,MAxQ2BvC,OAAOG,EAAkBmD,KAC1Db,QAAQc,IAAI,wCAAyCpD,EAAU,iBAAkBmD,GACjF,MAAMlB,GAAYtC,EAAAA,EAAAA,IAAIH,EAAU,eAAeQ,WACzCqD,EAAAA,EAAAA,IAAOpB,EAAW,CAAE5B,QAAS8C,GAAa,EAqQnCG,CAAoBzC,EAAOV,GAAIgD,EACxC,CAGA,OAAOI,QAAQC,SAAS,UAIpBD,QAAQE,IAAIT,EAEpB,CAAE,MAAOX,GAEP,MADAC,QAAQD,MAAM,6CAA8CA,GACtDA,CACR,E,iUCxVF,MACA,GAD4BqB,EAAAA,EAAAA,GAAuB,kBAAmB,CAAC,OAAQ,wB,wBCHxE,SAASC,EAAwBC,GACtC,OAAOC,EAAAA,EAAAA,IAAqB,cAAeD,EAC7C,CACA,MACA,GADwBF,EAAAA,EAAAA,GAAuB,cAAe,CAAC,OAAQ,eAAgB,QAAS,WAAY,UAAW,UAAW,a,aCe3H,MAwBDI,GAAeC,EAAAA,EAAAA,IAAOC,EAAAA,EAAY,CACtCC,kBAAmBC,IAAQC,EAAAA,EAAAA,GAAsBD,IAAkB,YAATA,EAC1D9D,KAAM,cACNwD,KAAM,OACNQ,kBA5B+BA,CAACC,EAAOC,KACvC,MAAM,WACJC,GACEF,EACJ,MAAO,CAACC,EAAOE,KAAMD,EAAWE,OAASH,EAAOG,MAAOF,EAAWG,SAAWJ,EAAOI,SAAUH,EAAWI,gBAAkBL,EAAOM,QAAQ,GAoBvHb,EAKlBc,EAAAA,EAAAA,IAAUC,IAAA,IAAC,MACZC,GACDD,EAAA,MAAM,IACFC,EAAMC,WAAWC,MACpBC,QAAS,OACTC,eAAgB,aAChBC,WAAY,SACZC,SAAU,WACVC,eAAgB,OAChBC,UAAW,GACXC,WAAY,EACZC,cAAe,EACfC,UAAW,aACXC,WAAY,SACZ,UAAW,CACTL,eAAgB,OAChBM,iBAAkBb,EAAMc,MAAQd,GAAOe,QAAQC,OAAOC,MAEtD,uBAAwB,CACtBJ,gBAAiB,gBAGrB,CAAC,KAAKK,EAAgBC,YAAa,CACjCN,gBAAiBb,EAAMc,KAAO,QAAQd,EAAMc,KAAKC,QAAQK,QAAQC,iBAAiBrB,EAAMc,KAAKC,QAAQC,OAAOM,oBAAqBC,EAAAA,EAAAA,IAAMvB,EAAMe,QAAQK,QAAQI,KAAMxB,EAAMe,QAAQC,OAAOM,iBACxL,CAAC,KAAKJ,EAAgBO,gBAAiB,CACrCZ,gBAAiBb,EAAMc,KAAO,QAAQd,EAAMc,KAAKC,QAAQK,QAAQC,sBAAsBrB,EAAMc,KAAKC,QAAQC,OAAOM,qBAAqBtB,EAAMc,KAAKC,QAAQC,OAAOU,kBAAmBH,EAAAA,EAAAA,IAAMvB,EAAMe,QAAQK,QAAQI,KAAMxB,EAAMe,QAAQC,OAAOM,gBAAkBtB,EAAMe,QAAQC,OAAOU,gBAGrR,CAAC,KAAKR,EAAgBC,kBAAmB,CACvCN,gBAAiBb,EAAMc,KAAO,QAAQd,EAAMc,KAAKC,QAAQK,QAAQC,sBAAsBrB,EAAMc,KAAKC,QAAQC,OAAOM,qBAAqBtB,EAAMc,KAAKC,QAAQC,OAAOW,kBAAmBJ,EAAAA,EAAAA,IAAMvB,EAAMe,QAAQK,QAAQI,KAAMxB,EAAMe,QAAQC,OAAOM,gBAAkBtB,EAAMe,QAAQC,OAAOW,cAEjR,uBAAwB,CACtBd,gBAAiBb,EAAMc,KAAO,QAAQd,EAAMc,KAAKC,QAAQK,QAAQC,iBAAiBrB,EAAMc,KAAKC,QAAQC,OAAOM,oBAAqBC,EAAAA,EAAAA,IAAMvB,EAAMe,QAAQK,QAAQI,KAAMxB,EAAMe,QAAQC,OAAOM,mBAG5L,CAAC,KAAKJ,EAAgBO,gBAAiB,CACrCZ,iBAAkBb,EAAMc,MAAQd,GAAOe,QAAQC,OAAOY,OAExD,CAAC,KAAKV,EAAgBW,YAAa,CACjCC,SAAU9B,EAAMc,MAAQd,GAAOe,QAAQC,OAAOe,iBAEhD,CAAC,QAAQC,EAAAA,EAAevC,QAAS,CAC/BwC,UAAWjC,EAAMkC,QAAQ,GACzBC,aAAcnC,EAAMkC,QAAQ,IAE9B,CAAC,QAAQF,EAAAA,EAAeI,SAAU,CAChCC,WAAY,IAEd,CAAC,MAAMC,EAAAA,EAAoB7C,QAAS,CAClCwC,UAAW,EACXE,aAAc,GAEhB,CAAC,MAAMG,EAAAA,EAAoBF,SAAU,CACnCG,YAAa,IAEf,CAAC,MAAMC,EAAoB/C,QAAS,CAClCgD,SAAU,IAEZC,SAAU,CAAC,CACTpD,MAAOqD,IAAA,IAAC,WACNnD,GACDmD,EAAA,OAAMnD,EAAWI,cAAc,EAChCgD,MAAO,CACLL,YAAa,GACbM,aAAc,KAEf,CACDvD,MAAOwD,IAAA,IAAC,WACNtD,GACDsD,EAAA,OAAKtD,EAAWG,OAAO,EACxBiD,MAAO,CACLG,aAAc,cAAc/C,EAAMc,MAAQd,GAAOe,QAAQpB,UACzDqD,eAAgB,gBAEjB,CACD1D,MAAO2D,IAAA,IAAC,WACNzD,GACDyD,EAAA,OAAMzD,EAAWE,KAAK,EACvBkD,MAAO,CACL,CAAC5C,EAAMkD,YAAYC,GAAG,OAAQ,CAC5B3C,UAAW,UAGd,CACDlB,MAAO8D,IAAA,IAAC,WACN5D,GACD4D,EAAA,OAAK5D,EAAWE,KAAK,EACtBkD,MAAO,CACLpC,UAAW,GAEXC,WAAY,EACZC,cAAe,KACZV,EAAMC,WAAWoD,MACpB,CAAC,MAAMb,EAAoB/C,YAAa,CACtC6D,SAAU,cAIjB,KAuID,EAtI8BC,EAAAA,YAAiB,SAAkBC,EAAS5I,GACxE,MAAM0E,GAAQmE,EAAAA,EAAAA,GAAgB,CAC5BnE,MAAOkE,EACPnI,KAAM,iBAEF,UACJqI,GAAY,EAAK,UACjBC,EAAY,KAAI,MAChBjE,GAAQ,EAAK,QACbC,GAAU,EAAK,eACfC,GAAiB,EAAK,sBACtBgE,EAAqB,KACrBC,EAAO,WACPC,SAAUC,EAAY,UACtBC,KACGC,GACD3E,EACE4E,EAAUX,EAAAA,WAAiBY,EAAAA,GAC3BC,EAAeb,EAAAA,SAAc,KAAM,CACvC7D,MAAOA,GAASwE,EAAQxE,QAAS,EACjCE,oBACE,CAACsE,EAAQxE,MAAOA,EAAOE,IACrByE,EAAcd,EAAAA,OAAa,OACjCe,EAAAA,EAAAA,IAAkB,KACZZ,GACEW,EAAYE,SACdF,EAAYE,QAAQ3C,OAIxB,GACC,CAAC8B,IACJ,MAAMlE,EAAa,IACdF,EACHI,MAAO0E,EAAa1E,MACpBC,UACAC,kBAEI4E,EAhKkBhF,KACxB,MAAM,SACJqC,EAAQ,MACRnC,EAAK,QACLC,EAAO,eACPC,EAAc,SACduB,EAAQ,QACRqD,GACEhF,EACEiF,EAAQ,CACZhF,KAAM,CAAC,OAAQC,GAAS,QAASmC,GAAY,YAAajC,GAAkB,UAAWD,GAAW,UAAWwB,GAAY,aAErHuD,GAAkBC,EAAAA,EAAAA,GAAeF,EAAO7F,EAAyB4F,GACvE,MAAO,IACFA,KACAE,EACJ,EAgJeE,CAAkBtF,GAC5BuF,GAAYC,EAAAA,EAAAA,GAAWT,EAAazJ,GAC1C,IAAIkJ,EAIJ,OAHKxE,EAAMuC,WACTiC,OAA4BlG,IAAjBmG,EAA6BA,GAAgB,IAEtCgB,EAAAA,EAAAA,KAAKZ,EAAAA,EAAYa,SAAU,CAC7CC,MAAOb,EACPc,UAAuBH,EAAAA,EAAAA,KAAKhG,EAAc,CACxCnE,IAAKiK,EACLhB,KAAMA,EACNC,SAAUA,EACVH,UAAWA,EACXC,uBAAuBuB,EAAAA,EAAAA,GAAKX,EAAQ/C,aAAcmC,GAClDI,WAAWmB,EAAAA,EAAAA,GAAKX,EAAQ/E,KAAMuE,MAC3BC,EACHzE,WAAYA,EACZgF,QAASA,KAGf,I,kCCnMA,QAJiCjB,EAAAA,gBCL1B,SAAS6B,EAAoBvG,GAClC,OAAOC,EAAAA,EAAAA,IAAqB,UAAWD,EACzC,CACA,MAGMwG,EAAa,CAAC,QAAQ,EAAM,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,IAUrE,GAToB1G,EAAAA,EAAAA,GAAuB,UAAW,CAAC,OAAQ,YAAa,OAAQ,kBAJnE,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,IAMpCT,KAAIgE,GAAW,cAAcA,SALtB,CAAC,iBAAkB,SAAU,cAAe,OAOjDhE,KAAIoH,GAAa,gBAAgBA,SANjC,CAAC,SAAU,eAAgB,QAQhCpH,KAAIqH,GAAQ,WAAWA,SAE7BF,EAAWnH,KAAIsH,GAAQ,WAAWA,SAAYH,EAAWnH,KAAIsH,GAAQ,WAAWA,SAAYH,EAAWnH,KAAIsH,GAAQ,WAAWA,SAAYH,EAAWnH,KAAIsH,GAAQ,WAAWA,SAAYH,EAAWnH,KAAIsH,GAAQ,WAAWA,QC2G7N,SAASC,EAA8B3C,GAGpC,IAHqC,YACtCI,EAAW,OACXwC,GACD5C,EACK6C,EAAa,GACjBC,OAAOC,KAAKH,GAAQ9J,SAAQV,IACP,KAAfyK,GAGgB,IAAhBD,EAAOxK,KACTyK,EAAazK,EACf,IAEF,MAAM4K,EAA8BF,OAAOC,KAAK3C,GAAa7G,MAAK,CAACC,EAAGC,IAC7D2G,EAAY5G,GAAK4G,EAAY3G,KAEtC,OAAOuJ,EAA4BC,MAAM,EAAGD,EAA4BE,QAAQL,GAClF,CA0HA,MAAMM,GAAWjH,EAAAA,EAAAA,IAAO,MAAO,CAC7B3D,KAAM,UACNwD,KAAM,OACNQ,kBAAmBA,CAACC,EAAOC,KACzB,MAAM,WACJC,GACEF,GACE,UACJ4G,EAAS,UACTZ,EAAS,KACTa,EAAI,QACJjE,EAAO,KACPqD,EAAI,aACJa,EAAY,YACZlD,GACE1D,EACJ,IAAI6G,EAAgB,GAGhBH,IACFG,EA9CC,SAA8BnE,EAASgB,GAA0B,IAAb3D,EAAM+G,UAAAC,OAAA,QAAA3I,IAAA0I,UAAA,GAAAA,UAAA,GAAG,CAAC,EAEnE,IAAKpE,GAAWA,GAAW,EACzB,MAAO,GAGT,GAAuB,kBAAZA,IAAyBsE,OAAOC,MAAMD,OAAOtE,KAAgC,kBAAZA,EAC1E,MAAO,CAAC3C,EAAO,cAAcmH,OAAOxE,OAGtC,MAAMmE,EAAgB,GAOtB,OANAnD,EAAYtH,SAAQ+K,IAClB,MAAM1B,EAAQ/C,EAAQyE,GAClBH,OAAOvB,GAAS,GAClBoB,EAAcrL,KAAKuE,EAAO,WAAWoH,KAAcD,OAAOzB,MAC5D,IAEKoB,CACT,CA4BsBO,CAAqB1E,EAASgB,EAAa3D,IAE7D,MAAMsH,EAAoB,GAO1B,OANA3D,EAAYtH,SAAQ+K,IAClB,MAAM1B,EAAQzF,EAAWmH,GACrB1B,GACF4B,EAAkB7L,KAAKuE,EAAO,QAAQoH,KAAcD,OAAOzB,MAC7D,IAEK,CAAC1F,EAAOE,KAAMyG,GAAa3G,EAAO2G,UAAWC,GAAQ5G,EAAO4G,KAAMC,GAAgB7G,EAAO6G,gBAAiBC,EAA6B,QAAdf,GAAuB/F,EAAO,gBAAgBmH,OAAOpB,MAAwB,SAATC,GAAmBhG,EAAO,WAAWmH,OAAOnB,SAAasB,EAAkB,GA7BlQ7H,EAiCjB8H,IAAA,IAAC,WACCtH,GACDsH,EAAA,MAAM,CACLnG,UAAW,gBACPnB,EAAW0G,WAAa,CAC1B/F,QAAS,OACT4G,SAAU,OACVC,MAAO,WAELxH,EAAW2G,MAAQ,CACrBc,OAAQ,MAENzH,EAAW4G,cAAgB,CAC7B3D,SAAU,MAEY,SAApBjD,EAAW+F,MAAmB,CAChCwB,SAAUvH,EAAW+F,MAExB,IA1NM,SAA0B5C,GAG9B,IAH+B,MAChC3C,EAAK,WACLR,GACDmD,EACC,MAAMuE,GAAkBC,EAAAA,EAAAA,IAAwB,CAC9CzB,OAAQlG,EAAW8F,UACnBpC,YAAalD,EAAMkD,YAAYwC,SAEjC,OAAO0B,EAAAA,EAAAA,IAAkB,CACvBpH,SACCkH,GAAiBG,IAClB,MAAMC,EAAS,CACbC,cAAeF,GAOjB,OALIA,EAAUG,WAAW,YACvBF,EAAO,QAAQG,EAAYtB,QAAU,CACnCuB,SAAU,SAGPJ,CAAM,GAEjB,IAyBO,SAAuBrE,GAG3B,IAH4B,MAC7BjD,EAAK,WACLR,GACDyD,EACC,MAAM,UACJiD,EAAS,WACTyB,GACEnI,EACJ,IAAID,EAAS,CAAC,EACd,GAAI2G,GAA4B,IAAfyB,EAAkB,CACjC,MAAMC,GAAmBT,EAAAA,EAAAA,IAAwB,CAC/CzB,OAAQiC,EACRzE,YAAalD,EAAMkD,YAAYwC,SAEjC,IAAImC,EAC4B,kBAArBD,IACTC,EAA0BpC,EAA+B,CACvDvC,YAAalD,EAAMkD,YAAYwC,OAC/BA,OAAQkC,KAGZrI,GAAS6H,EAAAA,EAAAA,IAAkB,CACzBpH,SACC4H,GAAkB,CAACP,EAAWV,KAC/B,MAAMmB,EAAe9H,EAAMkC,QAAQmF,GACnC,MAAqB,QAAjBS,EACK,CACL7F,UAAW,aAAa6F,KACxB,CAAC,QAAQL,EAAYtB,QAAS,CAC5B1F,WAAYqH,IAIdD,GAAyBE,SAASpB,GAC7B,CAAC,EAEH,CACL1E,UAAW,EACX,CAAC,QAAQwF,EAAYtB,QAAS,CAC5B1F,WAAY,GAEf,GAEL,CACA,OAAOlB,CACT,IACO,SAA0B6D,GAG9B,IAH+B,MAChCpD,EAAK,WACLR,GACD4D,EACC,MAAM,UACJ8C,EAAS,cACT8B,GACExI,EACJ,IAAID,EAAS,CAAC,EACd,GAAI2G,GAA+B,IAAlB8B,EAAqB,CACpC,MAAMC,GAAsBd,EAAAA,EAAAA,IAAwB,CAClDzB,OAAQsC,EACR9E,YAAalD,EAAMkD,YAAYwC,SAEjC,IAAImC,EAC+B,kBAAxBI,IACTJ,EAA0BpC,EAA+B,CACvDvC,YAAalD,EAAMkD,YAAYwC,OAC/BA,OAAQuC,KAGZ1I,GAAS6H,EAAAA,EAAAA,IAAkB,CACzBpH,SACCiI,GAAqB,CAACZ,EAAWV,KAClC,MAAMmB,EAAe9H,EAAMkC,QAAQmF,GACnC,GAAqB,QAAjBS,EAAwB,CAE1B,MAAO,CACLd,MAAO,eAAec,KACtBzF,WAHoB,aAAayF,KAIjC,CAAC,QAAQL,EAAYtB,QAAS,CAC5B5D,YAAauF,GAGnB,CACA,OAAID,GAAyBE,SAASpB,GAC7B,CAAC,EAEH,CACLK,MAAO,OACP3E,WAAY,EACZ,CAAC,QAAQoF,EAAYtB,QAAS,CAC5B5D,YAAa,GAEhB,GAEL,CACA,OAAOhD,CACT,IAnNO,SAAqBQ,GAGzB,IACGyF,GAJuB,MAC3BxF,EAAK,WACLR,GACDO,EAEC,OAAOC,EAAMkD,YAAY2C,KAAKqC,QAAO,CAACC,EAAcxB,KAElD,IAAIpH,EAAS,CAAC,EAId,GAHIC,EAAWmH,KACbnB,EAAOhG,EAAWmH,KAEfnB,EACH,OAAO2C,EAET,IAAa,IAAT3C,EAEFjG,EAAS,CACP6I,UAAW,EACXC,SAAU,EACVX,SAAU,aAEP,GAAa,SAATlC,EACTjG,EAAS,CACP6I,UAAW,OACXC,SAAU,EACVC,WAAY,EACZZ,SAAU,OACVV,MAAO,YAEJ,CACL,MAAMuB,GAA0BpB,EAAAA,EAAAA,IAAwB,CACtDzB,OAAQlG,EAAWgJ,QACnBtF,YAAalD,EAAMkD,YAAYwC,SAE3B+C,EAAiD,kBAA5BF,EAAuCA,EAAwB5B,GAAc4B,EACxG,QAAoB3K,IAAhB6K,GAA6C,OAAhBA,EAC/B,OAAON,EAGT,MAAMnB,EAAW0B,KAAKC,MAAMnD,EAAOiD,EAAc,KAAQ,IAA3C,IACd,IAAIG,EAAO,CAAC,EACZ,GAAIpJ,EAAW0G,WAAa1G,EAAW2G,MAAqC,IAA7B3G,EAAWwI,cAAqB,CAC7E,MAAMF,EAAe9H,EAAMkC,QAAQ1C,EAAWwI,eAC9C,GAAqB,QAAjBF,EAAwB,CAC1B,MAAMe,EAAY,QAAQ7B,OAAWc,KACrCc,EAAO,CACLR,UAAWS,EACXnB,SAAUmB,EAEd,CACF,CAIAtJ,EAAS,CACP6I,UAAWpB,EACXqB,SAAU,EACVX,SAAUV,KACP4B,EAEP,CAQA,OAL6C,IAAzC5I,EAAMkD,YAAYwC,OAAOiB,GAC3Bf,OAAOkD,OAAOX,EAAc5I,GAE5B4I,EAAanI,EAAMkD,YAAYC,GAAGwD,IAAepH,EAE5C4I,CAAY,GAClB,CAAC,EACN,IAgPA,MAAMvD,EAAoBpF,IACxB,MAAM,QACJgF,EAAO,UACP0B,EAAS,UACTZ,EAAS,KACTa,EAAI,QACJjE,EAAO,KACPqD,EAAI,aACJa,EAAY,YACZlD,GACE1D,EACJ,IAAIuJ,EAAiB,GAGjB7C,IACF6C,EAnCG,SAA+B7G,EAASgB,GAE7C,IAAKhB,GAAWA,GAAW,EACzB,MAAO,GAGT,GAAuB,kBAAZA,IAAyBsE,OAAOC,MAAMD,OAAOtE,KAAgC,kBAAZA,EAC1E,MAAO,CAAC,cAAcwE,OAAOxE,MAG/B,MAAMsC,EAAU,GAQhB,OAPAtB,EAAYtH,SAAQ+K,IAClB,MAAM1B,EAAQ/C,EAAQyE,GACtB,GAAIH,OAAOvB,GAAS,EAAG,CACrB,MAAMjB,EAAY,WAAW2C,KAAcD,OAAOzB,KAClDT,EAAQxJ,KAAKgJ,EACf,KAEKQ,CACT,CAgBqBwE,CAAsB9G,EAASgB,IAElD,MAAM+F,EAAqB,GAC3B/F,EAAYtH,SAAQ+K,IAClB,MAAM1B,EAAQzF,EAAWmH,GACrB1B,GACFgE,EAAmBjO,KAAK,QAAQ2L,KAAcD,OAAOzB,KACvD,IAEF,MAAMR,EAAQ,CACZhF,KAAM,CAAC,OAAQyG,GAAa,YAAaC,GAAQ,OAAQC,GAAgB,kBAAmB2C,EAA8B,QAAdzD,GAAuB,gBAAgBoB,OAAOpB,KAAuB,SAATC,GAAmB,WAAWmB,OAAOnB,QAAY0D,IAE3N,OAAOtE,EAAAA,EAAAA,GAAeF,EAAOW,EAAqBZ,EAAQ,EAMtD0E,EAAoB3F,EAAAA,YAAiB,SAAcC,EAAS5I,GAChE,MAAMuO,GAAa1F,EAAAA,EAAAA,GAAgB,CACjCnE,MAAOkE,EACPnI,KAAM,aAEF,YACJ6H,IACEkG,EAAAA,EAAAA,KACE9J,GAAQ+J,EAAAA,EAAAA,GAAaF,IACrB,UACJnF,EACAwE,QAASc,EACTtB,cAAeuB,EAAiB,UAChC5F,EAAY,MAAK,UACjBuC,GAAY,EAAK,UACjBZ,EAAY,MAAK,KACjBa,GAAO,EACPwB,WAAY6B,EAAc,QAC1BtH,EAAU,EAAC,KACXqD,EAAO,OAAM,aACba,GAAe,KACZnC,GACD3E,EACEqI,EAAa6B,GAAkBtH,EAC/B8F,EAAgBuB,GAAqBrH,EACrCuH,EAAiBlG,EAAAA,WAAiBmG,GAGlClB,EAAUtC,EAAYoD,GAAe,GAAKG,EAC1CE,EAAoB,CAAC,EACrBC,EAAgB,IACjB3F,GAELf,EAAY2C,KAAKjK,SAAQ+K,IACE,MAArB1C,EAAM0C,KACRgD,EAAkBhD,GAAc1C,EAAM0C,UAC/BiD,EAAcjD,GACvB,IAEF,MAAMnH,EAAa,IACdF,EACHkJ,UACAtC,YACAZ,YACAa,OACAwB,aACAK,gBACAzC,OACAa,eACAlE,aACGyH,EACHzG,YAAaA,EAAY2C,MAErBrB,EAAUI,EAAkBpF,GAClC,OAAoBuF,EAAAA,EAAAA,KAAK2E,EAAY1E,SAAU,CAC7CC,MAAOuD,EACPtD,UAAuBH,EAAAA,EAAAA,KAAKkB,EAAU,CACpCzG,WAAYA,EACZwE,WAAWmB,EAAAA,EAAAA,GAAKX,EAAQ/E,KAAMuE,GAC9B6F,GAAIlG,EACJ/I,IAAKA,KACFgP,KAGT,IAiJA,UC/jBO,SAASE,EAAoBjL,GAClC,OAAOC,EAAAA,EAAAA,IAAqB,UAAWD,EACzC,EACoBF,EAAAA,EAAAA,GAAuB,UAAW,CAAC,SAAvD,MCgBMoL,GAAW/K,EAAAA,EAAAA,IAAOgL,EAAAA,EAAO,CAC7B3O,KAAM,UACNwD,KAAM,OACNQ,kBAAmBA,CAACC,EAAOC,IAAWA,EAAOE,MAH9BT,CAId,CACDiL,SAAU,WAyDZ,EAvD0B1G,EAAAA,YAAiB,SAAcC,EAAS5I,GAChE,MAAM0E,GAAQmE,EAAAA,EAAAA,GAAgB,CAC5BnE,MAAOkE,EACPnI,KAAM,aAEF,UACJ2I,EAAS,OACTkG,GAAS,KACNjG,GACD3E,EACEE,EAAa,IACdF,EACH4K,UAEI1F,EA9BkBhF,KACxB,MAAM,QACJgF,GACEhF,EAIJ,OAAOmF,EAAAA,EAAAA,GAHO,CACZlF,KAAM,CAAC,SAEoBqK,EAAqBtF,EAAQ,EAuB1CI,CAAkBpF,GAClC,OAAoBuF,EAAAA,EAAAA,KAAKgF,EAAU,CACjC/F,WAAWmB,EAAAA,EAAAA,GAAKX,EAAQ/E,KAAMuE,GAC9BmG,UAAWD,EAAS,OAAItM,EACxBhD,IAAKA,EACL4E,WAAYA,KACTyE,GAEP,IChDO,SAASmG,EAA2BvL,GACzC,OAAOC,EAAAA,EAAAA,IAAqB,iBAAkBD,EAChD,EAC2BF,EAAAA,EAAAA,GAAuB,iBAAkB,CAAC,SAArE,MCcM0L,IAAkBrL,EAAAA,EAAAA,IAAO,MAAO,CACpC3D,KAAM,iBACNwD,KAAM,OACNQ,kBAAmBA,CAACC,EAAOC,IAAWA,EAAOE,MAHvBT,CAIrB,CACDsL,QAAS,GACT,eAAgB,CACd5J,cAAe,MAqDnB,GAlDiC6C,EAAAA,YAAiB,SAAqBC,EAAS5I,GAC9E,MAAM0E,GAAQmE,EAAAA,EAAAA,GAAgB,CAC5BnE,MAAOkE,EACPnI,KAAM,oBAEF,UACJ2I,EAAS,UACTL,EAAY,SACTM,GACD3E,EACEE,EAAa,IACdF,EACHqE,aAEIa,EAjCkBhF,KACxB,MAAM,QACJgF,GACEhF,EAIJ,OAAOmF,EAAAA,EAAAA,GAHO,CACZlF,KAAM,CAAC,SAEoB2K,EAA4B5F,EAAQ,EA0BjDI,CAAkBpF,GAClC,OAAoBuF,EAAAA,EAAAA,KAAKsF,GAAiB,CACxCR,GAAIlG,EACJK,WAAWmB,EAAAA,EAAAA,GAAKX,EAAQ/E,KAAMuE,GAC9BxE,WAAYA,EACZ5E,IAAKA,KACFqJ,GAEP,I,0BC/CA,UAAesG,E,QAAAA,IAA2BxF,EAAAA,EAAAA,KAAK,OAAQ,CACrDyF,EAAG,oNACD,wB,0BC2BJ,MA4KA,GA5KqCC,KACnC,MAAMC,GAAWC,EAAAA,EAAAA,OACVC,EAAcC,IAAmBC,EAAAA,EAAAA,UAA0B,OAC3DC,EAAUC,IAAeF,EAAAA,EAAAA,UAAqB,KAC9CG,EAAgBC,IAAqBJ,EAAAA,EAAAA,UAAmB,KACxDK,EAAcC,IAAmBN,EAAAA,EAAAA,WAAS,IAC1CO,EAAiBC,IAAsBR,EAAAA,EAAAA,WAAS,IAEvDS,EAAAA,EAAAA,YAAU,KAERC,GAAe,GACd,IAEH,MAAMA,EAAgB1Q,UACpBsQ,GAAgB,GAChB,IACE,MAAMlP,QAAcD,EAAAA,GAAAA,MACpB+O,EAAY9O,GAGRA,EAAMqK,OAAS,GACjBsE,EAAgB3O,EAAM,GAE1B,CAAE,MAAOoB,GACPC,QAAQD,MAAM,uBAAwBA,EACxC,CAAC,QACC8N,GAAgB,EAClB,IAGFG,EAAAA,EAAAA,YAAU,KACJX,GACFa,GACF,GACC,CAACb,IAEJ,MAAMa,EAAqB3Q,UACzB,GAAK8P,EAAL,CAEAU,GAAmB,GACnB,IACE,MAAMI,QAAiBlO,EAAAA,GAAAA,IAAuBoN,EAAa1P,KAC3DgQ,EAAkBQ,EACpB,CAAE,MAAOpO,GACPC,QAAQD,MAAM,iCAAkCA,EAClD,CAAC,QACCgO,GAAmB,EACrB,CAVyB,CAUzB,EASIK,EAAqBC,GACZ,IAAIpP,KAAKoP,GACVC,mBAAmB,QAAS,CACtCC,KAAM,UACNC,MAAO,OACPC,IAAK,YAIT,OACEC,EAAAA,EAAAA,MAACC,EAAAA,EAAG,CAACC,GAAI,CAAE9D,SAAU,GAAInD,SAAA,EACvBH,EAAAA,EAAAA,KAACqH,EAAAA,EAAM,CAAC9L,SAAS,SAAS6L,GAAI,CAAEE,QAAS,aAAcnH,UACrD+G,EAAAA,EAAAA,MAACK,EAAAA,EAAO,CAAApH,SAAA,EACNH,EAAAA,EAAAA,KAACwH,EAAAA,EAAU,CACTC,KAAK,QACLC,MAAM,UACN,aAAW,OACXC,QAASA,IAAMhC,EAASiC,GAAAA,EAAOC,MAC/BT,GAAI,CAAEU,GAAI,GAAI3H,UAEdH,EAAAA,EAAAA,KAAC+H,GAAAA,EAAa,OAEhB/H,EAAAA,EAAAA,KAACgI,EAAAA,EAAU,CAACC,QAAQ,KAAKrJ,UAAU,MAAMwI,GAAI,CAAE9D,SAAU,GAAInD,SAAC,yBAMlE+G,EAAAA,EAAAA,MAACgB,EAAAA,EAAS,CAACvF,SAAS,KAAKyE,GAAI,CAAEe,GAAI,GAAIhI,SAAA,EACrC+G,EAAAA,EAAAA,MAACjC,EAAAA,EAAK,CAACG,UAAW,EAAGgC,GAAI,CAAEgB,EAAG,EAAGC,GAAI,GAAIlI,SAAA,EACvCH,EAAAA,EAAAA,KAACgI,EAAAA,EAAU,CAACC,QAAQ,KAAKK,cAAY,EAAAnI,SAAC,iBAGtCH,EAAAA,EAAAA,KAACuI,EAAAA,EAAO,CAACnB,GAAI,CAAEiB,GAAI,KAElBjC,GACCpG,EAAAA,EAAAA,KAACmH,EAAAA,EAAG,CAACC,GAAI,CAAEhM,QAAS,OAAQC,eAAgB,SAAU+M,EAAG,GAAIjI,UAC3DH,EAAAA,EAAAA,KAACwI,EAAAA,EAAgB,CAAC/H,KAAM,QAG1ByG,EAAAA,EAAAA,MAACuB,EAAAA,EAAW,CAAC3E,WAAS,EAACmE,QAAQ,WAAU9H,SAAA,EACvCH,EAAAA,EAAAA,KAAC0I,EAAAA,EAAU,CAACrS,GAAG,oBAAmB8J,SAAC,UACnCH,EAAAA,EAAAA,KAAC2I,EAAAA,EAAM,CACLC,QAAQ,oBACRvS,GAAG,cACH6J,OAAmB,OAAZ2F,QAAY,IAAZA,OAAY,EAAZA,EAAc1P,MAAO,GAC5B0S,SApDYC,IACxB,MAAMC,EAAcD,EAAME,OAAO9I,MAC3B9D,EAAW4J,EAASiD,MAAKxD,GAAKA,EAAEtP,MAAQ4S,KAAgB,KAC9DjD,EAAgB1J,EAAS,EAkDb8M,MAAM,OACNpM,SAA8B,IAApBkJ,EAASxE,OAAarB,SAEX,IAApB6F,EAASxE,QACRxB,EAAAA,EAAAA,KAACmJ,EAAQ,CAACjJ,MAAM,GAAEC,SAAC,uBAEnB6F,EAAS7M,KAAKiQ,IACZpJ,EAAAA,EAAAA,KAACmJ,EAAQ,CAAoBjJ,MAAOkJ,EAASjT,IAAIgK,SAC9CyG,EAAkBwC,EAAShS,OADfgS,EAASjT,eAUnC0P,IACC7F,EAAAA,EAAAA,KAACmH,EAAAA,EAAG,CAACC,GAAI,CAAEnF,MAAO,QAAS9B,SACxBmG,GACCtG,EAAAA,EAAAA,KAACmH,EAAAA,EAAG,CAACC,GAAI,CAAEhM,QAAS,OAAQC,eAAgB,SAAU+M,EAAG,GAAIjI,UAC3DH,EAAAA,EAAAA,KAACwI,EAAAA,EAAgB,MAES,IAA1BtC,EAAe1E,QACjBxB,EAAAA,EAAAA,KAACiF,EAAAA,EAAK,CAACG,UAAW,EAAGgC,GAAI,CAAEgB,EAAG,GAAIjI,UAChCH,EAAAA,EAAAA,KAACgI,EAAAA,EAAU,CAACC,QAAQ,QAAQoB,MAAM,SAAQlJ,SAAC,kDAK7C+G,EAAAA,EAAAA,MAACjC,EAAAA,EAAK,CAACG,UAAW,EAAGgC,GAAI,CAAEgB,EAAG,GAAIjI,SAAA,EAChC+G,EAAAA,EAAAA,MAACc,EAAAA,EAAU,CAACC,QAAQ,KAAKK,cAAY,EAAAnI,SAAA,CAAC,sBAChB0F,EAAee,EAAkBf,EAAazO,MAAQ,OAE5E4I,EAAAA,EAAAA,KAACuI,EAAAA,EAAO,CAACnB,GAAI,CAAEiB,GAAI,MAEnBrI,EAAAA,EAAAA,KAACmE,EAAI,CAAChD,WAAS,EAAChE,QAAS,EAAEgD,SACxB+F,EAAe/M,KAAKpC,IACnBiJ,EAAAA,EAAAA,KAACmE,EAAI,CAAC/C,MAAI,EAACkI,GAAI,GAAIC,GAAI,EAAGC,GAAI,EAAErJ,UAC9BH,EAAAA,EAAAA,KAACyJ,EAAI,CAACxB,QAAQ,WAAU9H,UACtB+G,EAAAA,EAAAA,MAACwC,GAAW,CAAAvJ,SAAA,EACVH,EAAAA,EAAAA,KAACgI,EAAAA,EAAU,CAACC,QAAQ,KAAKK,cAAY,EAAAnI,SAClCpJ,EAAOT,QAEV4Q,EAAAA,EAAAA,MAACC,EAAAA,EAAG,CAACC,GAAI,CAAEhM,QAAS,OAAQC,eAAgB,gBAAiBC,WAAY,UAAW6E,SAAA,EAClFH,EAAAA,EAAAA,KAACgI,EAAAA,EAAU,CAACC,QAAQ,QAAQP,MAAM,iBAAgBvH,SAAC,cAGnDH,EAAAA,EAAAA,KAAC2J,GAAAA,EAAI,CACHC,MAAM5J,EAAAA,EAAAA,KAAC6J,GAAwB,IAC/BX,MAAOnS,EAAOR,QACdmR,MAAO3Q,EAAOR,QAAU,EAAI,UAAYQ,EAAOR,QAAU,EAAI,QAAU,UACvE0R,QAAQ,sBAdoBlR,EAAOV,kBA2BvD,C","sources":["data/firebase.ts","../node_modules/@mui/material/ListItemIcon/listItemIconClasses.js","../node_modules/@mui/material/MenuItem/menuItemClasses.js","../node_modules/@mui/material/MenuItem/MenuItem.js","../node_modules/@mui/material/Grid/GridContext.js","../node_modules/@mui/material/Grid/gridClasses.js","../node_modules/@mui/material/Grid/Grid.js","../node_modules/@mui/material/Card/cardClasses.js","../node_modules/@mui/material/Card/Card.js","../node_modules/@mui/material/CardContent/cardContentClasses.js","../node_modules/@mui/material/CardContent/CardContent.js","../node_modules/@mui/icons-material/esm/AccountBalanceWallet.js","screens/HistoryByDayScreen.tsx"],"sourcesContent":["import { initializeApp } from 'firebase/app';\nimport { \n  getDatabase, \n  ref, \n  set, \n  push, \n  get, \n  remove, \n  update,\n  query,\n  orderByChild,\n  startAt,\n  endAt\n} from 'firebase/database';\nimport { Player, Game, Transfer } from './models';\n\n// נגדיר את הטיפוס ישירות בקובץ במקום לייבא אותו\ninterface GamePlayerData {\n  playerName: string;\n  buyIn: number;\n  cashOut: number;\n  profit: number;\n}\n\n// Firebase configuration - replace with your own config\nconst firebaseConfig = {\n  // כאן הכנס את פרטי הקונפיגורציה האמיתיים שלך\n  apiKey: \"AIzaSyB_C62gqBeFuCIEkMrUr3tdEWTCIZX7RyA\",\n  authDomain: \"poker-967ea.firebaseapp.com\",\n  // השאר שדה זה ריק בכוונה\n  // databaseURL: \"https://poker-967ea.firebaseio.com\",\n  projectId: \"poker-967ea\",\n  storageBucket: \"poker-967ea.firebasestorage.app\",\n  messagingSenderId: \"349597163789\",\n  appId: \"1:349597163789:android:c2f23b99100e2176b81044\"\n};\n// Initialize Firebase\nconst app = initializeApp(firebaseConfig);\nconst database = getDatabase(app);\n\n\n// Players API\nexport const playersRef = ref(database, 'PlayersList');\n\nexport const addPlayer = async (name: string): Promise<string> => {\n  const newPlayerRef = push(playersRef);\n  const playerId = newPlayerRef.key as string;\n  \n  await set(newPlayerRef, {\n    id: playerId,\n    name: name,\n    balance: 0\n  });\n  \n  return playerId;\n};\n\nexport const getPlayers = async (): Promise<Player[]> => {\n  const snapshot = await get(playersRef);\n  const players: Player[] = [];\n  \n  if (snapshot.exists()) {\n    snapshot.forEach((childSnapshot) => {\n      const player = childSnapshot.val() as Player;\n      player.id = childSnapshot.key as string;\n      players.push(player);\n    });\n  }\n  \n  return players;\n};\n\nexport const updatePlayerBalance = async (playerId: string, newBalance: number): Promise<void> => {\n  console.log(\"Updating player balance for playerId:\", playerId, \"to newBalance:\", newBalance);\n  const playerRef = ref(database, `PlayersList/${playerId}`);\n  await update(playerRef, { balance: newBalance });\n};\n\n// Date list API\nexport const datesListRef = ref(database, 'dateList');\n\nexport const getDateList = async (): Promise<{ date: string, key: string }[]> => {\n  const snapshot = await get(datesListRef);\n  const dates: { date: string, key: string }[] = [];\n  \n  if (snapshot.exists()) {\n    snapshot.forEach((childSnapshot) => {\n      const date = childSnapshot.child('date').val() as string;\n      if (date) {\n        dates.push({\n          date: date,\n          key: childSnapshot.key as string\n        });\n      }\n    });\n  }\n  \n  // Sort dates in descending order (newest first)\n  return dates.sort((a, b) => new Date(b.date).getTime() - new Date(a.date).getTime());\n};\n\nexport const addDateToList = async (date: string): Promise<string> => {\n  // Extract just the date part (YYYY-MM-DD) from the date string\n  const datePart = date.split('T')[0];\n  \n  // Create a new entry in the dateList\n  const newDateRef = push(datesListRef);\n  const dateId = newDateRef.key as string;\n  \n  await set(newDateRef, {\n    date: datePart\n  });\n  \n  return dateId;\n};\n\n// Games API\nexport const gamesRef = ref(database, 'Games');\nexport const datesRef = ref(database, 'dateList');\n\nexport const addGame = async (gameData: { date: string, players: GamePlayerData[] }): Promise<string> => {\n  try {\n    // יצירת מזהה חדש עבור הרשומה של התאריך\n    const newDateRef = push(datesRef);\n    const dateId = newDateRef.key as string;\n    \n    if (!dateId) {\n      throw new Error('Failed to generate date ID');\n    }\n    \n    // שמירת פרטי התאריך\n    const dateData = {\n      date: gameData.date\n    };\n    \n    // שמירת התאריך\n    await set(newDateRef, dateData);\n    \n    // יצירת התייחסות לקולקציית שחקנים תחת התאריך הזה\n    const playerBalanceRef = ref(database, `dateList/${dateId}/playerBalance`);\n    \n    // שמירת כל שחקן עם המאזן שלו\n    for (const player of gameData.players) {\n      // יצירת מזהה חדש עבור כל שחקן\n      const playerRef = push(playerBalanceRef);\n      const playerId = playerRef.key;\n      \n      if (!playerId) {\n        throw new Error('Failed to generate player ID');\n      }\n      \n      // שמירת פרטי השחקן והמאזן שלו\n      const playerData = {\n        name: player.playerName,\n        balance: player.profit // או cashOut - buyIn\n      };\n      \n      await set(playerRef, playerData);\n    }\n    \n    return dateId;\n  } catch (error) {\n    console.error(\"Error adding game:\", error);\n    throw error;\n  }\n};\n\nexport const getGamesByDate = async (dateOrKey: string): Promise<Game[]> => {\n  // First, check if we're getting games by a dateList key\n  const dateListRef = ref(database, `dateList/${dateOrKey}`);\n  const dateSnapshot = await get(dateListRef);\n  \n  let dateString = dateOrKey;\n  \n  // If a valid date key was provided, get the date string from it\n  if (dateSnapshot.exists()) {\n    const date = dateSnapshot.child('date').val() as string;\n    if (date) {\n      dateString = date;\n    }\n  }\n  \n  // Use orderByChild and startAt/endAt for more efficient querying\n  // This filters the games on the server side before data is sent to client\n  const startDate = `${dateString}T00:00:00.000Z`;\n  const endDate = `${dateString}T23:59:59.999Z`;\n  \n  const gamesQuery = query(\n    gamesRef,\n    orderByChild('date'),\n    startAt(startDate),\n    endAt(endDate)\n  );\n  \n  const snapshot = await get(gamesQuery);\n  const games: Game[] = [];\n  \n  if (snapshot.exists()) {\n    snapshot.forEach((childSnapshot) => {\n      const game = childSnapshot.val() as Game;\n      games.push(game);\n    });\n  }\n  \n  return games;\n};\n\nexport const getAllGameDates = async (limit: number = 10, startDate?: string): Promise<string[]> => {\n  let gamesQuery;\n  \n  if (startDate) {\n    // Query games with dates before the startDate (for pagination)\n    gamesQuery = query(\n      gamesRef,\n      orderByChild('date'),\n      endAt(startDate)\n    );\n  } else {\n    // Query all games\n    gamesQuery = query(gamesRef, orderByChild('date'));\n  }\n  \n  const snapshot = await get(gamesQuery);\n  const dates = new Set<string>();\n  \n  if (snapshot.exists()) {\n    // Convert to array to handle pagination properly\n    const games: Game[] = [];\n    snapshot.forEach((childSnapshot) => {\n      games.push(childSnapshot.val() as Game);\n    });\n    \n    // Sort in reverse order (most recent first)\n    games.sort((a, b) => b.date.localeCompare(a.date));\n    \n    // Extract unique dates\n    for (const game of games) {\n      const datePart = game.date.split('T')[0];\n      dates.add(datePart);\n      \n      // Exit early if we've reached the limit\n      if (limit > 0 && dates.size >= limit) {\n        break;\n      }\n    }\n  }\n  \n  // Convert Set to Array and sort in descending order (newest first)\n  return Array.from(dates).sort().reverse();\n};\n\n// Transfers API\nexport const transfersRef = ref(database, 'Transfers');\n\nexport const addTransfer = async (transfer: Omit<Transfer, 'id'>): Promise<string> => {\n  const newTransferRef = push(transfersRef);\n  const transferId = newTransferRef.key as string;\n  \n  await set(newTransferRef, {\n    ...transfer,\n    id: transferId\n  });\n  \n  return transferId;\n};\n\nexport const getTransfers = async (): Promise<Transfer[]> => {\n  const snapshot = await get(transfersRef);\n  const transfers: Transfer[] = [];\n  \n  if (snapshot.exists()) {\n    snapshot.forEach((childSnapshot) => {\n      const transfer = childSnapshot.val() as Transfer;\n      transfers.push(transfer);\n    });\n  }\n  \n  return transfers;\n};\n\n// Player balance by date API\nexport const getPlayerBalanceByDate = async (dateKey: string): Promise<Player[]> => {\n  if (!dateKey) {\n    throw new Error(\"Please select a date\");\n  }\n  \n  const balanceRef = ref(database, `dateList/${dateKey}/playerBalance`);\n  const snapshot = await get(balanceRef);\n  const players: Player[] = [];\n  \n  if (snapshot.exists()) {\n    snapshot.forEach((playerSnapshot) => {\n      const name = playerSnapshot.child('name').val() as string;\n      const balance = playerSnapshot.child('balance').val() as number;\n      const id = playerSnapshot.key as string;\n      \n      if (name && balance !== undefined) {\n        players.push({\n          id,\n          name,\n          balance\n        });\n      }\n    });\n  }\n  \n  // Sort players by balance in descending order\n  return players.sort((a, b) => b.balance - a.balance);\n};\n\n/**\n * Updates the balances of all players after a game is finished\n * @param gameData - The data about the game including players and their profits\n * @returns Promise that resolves when all player balances have been updated\n */\nexport const updatePlayersBalancesAfterGame = async (gameData: { players: GamePlayerData[] }): Promise<void> => {\n  try {\n    // Get all players from the database\n    const allPlayers = await getPlayers();\n    \n    // Create a mapping for quick lookup of player data by name\n    const gamePlayerMap = new Map<string, GamePlayerData>();\n    gameData.players.forEach(player => {\n      gamePlayerMap.set(player.playerName, player);\n    });\n    \n    // Process each player\n    const updatePromises = allPlayers.map(player => {\n      // Check if this player participated in the game\n      const gamePlayerData = gamePlayerMap.get(player.name);\n      \n      if (gamePlayerData) {\n        // Calculate new balance\n        const newBalance = player.balance + gamePlayerData.profit;\n        \n        // Update the player's balance in the database\n        return updatePlayerBalance(player.id, newBalance);\n      }\n      \n      // Player didn't participate, no update needed\n      return Promise.resolve();\n    });\n    \n    // Wait for all updates to complete\n    await Promise.all(updatePromises);\n    \n  } catch (error) {\n    console.error(\"Error updating player balances after game:\", error);\n    throw error;\n  }\n}; ","import generateUtilityClasses from '@mui/utils/generateUtilityClasses';\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\nexport function getListItemIconUtilityClass(slot) {\n  return generateUtilityClass('MuiListItemIcon', slot);\n}\nconst listItemIconClasses = generateUtilityClasses('MuiListItemIcon', ['root', 'alignItemsFlexStart']);\nexport default listItemIconClasses;","import generateUtilityClasses from '@mui/utils/generateUtilityClasses';\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\nexport function getMenuItemUtilityClass(slot) {\n  return generateUtilityClass('MuiMenuItem', slot);\n}\nconst menuItemClasses = generateUtilityClasses('MuiMenuItem', ['root', 'focusVisible', 'dense', 'disabled', 'divider', 'gutters', 'selected']);\nexport default menuItemClasses;","'use client';\n\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport composeClasses from '@mui/utils/composeClasses';\nimport { alpha } from '@mui/system/colorManipulator';\nimport rootShouldForwardProp from \"../styles/rootShouldForwardProp.js\";\nimport { styled } from \"../zero-styled/index.js\";\nimport memoTheme from \"../utils/memoTheme.js\";\nimport { useDefaultProps } from \"../DefaultPropsProvider/index.js\";\nimport ListContext from \"../List/ListContext.js\";\nimport ButtonBase from \"../ButtonBase/index.js\";\nimport useEnhancedEffect from \"../utils/useEnhancedEffect.js\";\nimport useForkRef from \"../utils/useForkRef.js\";\nimport { dividerClasses } from \"../Divider/index.js\";\nimport { listItemIconClasses } from \"../ListItemIcon/index.js\";\nimport { listItemTextClasses } from \"../ListItemText/index.js\";\nimport menuItemClasses, { getMenuItemUtilityClass } from \"./menuItemClasses.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport const overridesResolver = (props, styles) => {\n  const {\n    ownerState\n  } = props;\n  return [styles.root, ownerState.dense && styles.dense, ownerState.divider && styles.divider, !ownerState.disableGutters && styles.gutters];\n};\nconst useUtilityClasses = ownerState => {\n  const {\n    disabled,\n    dense,\n    divider,\n    disableGutters,\n    selected,\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root', dense && 'dense', disabled && 'disabled', !disableGutters && 'gutters', divider && 'divider', selected && 'selected']\n  };\n  const composedClasses = composeClasses(slots, getMenuItemUtilityClass, classes);\n  return {\n    ...classes,\n    ...composedClasses\n  };\n};\nconst MenuItemRoot = styled(ButtonBase, {\n  shouldForwardProp: prop => rootShouldForwardProp(prop) || prop === 'classes',\n  name: 'MuiMenuItem',\n  slot: 'Root',\n  overridesResolver\n})(memoTheme(({\n  theme\n}) => ({\n  ...theme.typography.body1,\n  display: 'flex',\n  justifyContent: 'flex-start',\n  alignItems: 'center',\n  position: 'relative',\n  textDecoration: 'none',\n  minHeight: 48,\n  paddingTop: 6,\n  paddingBottom: 6,\n  boxSizing: 'border-box',\n  whiteSpace: 'nowrap',\n  '&:hover': {\n    textDecoration: 'none',\n    backgroundColor: (theme.vars || theme).palette.action.hover,\n    // Reset on touch devices, it doesn't add specificity\n    '@media (hover: none)': {\n      backgroundColor: 'transparent'\n    }\n  },\n  [`&.${menuItemClasses.selected}`]: {\n    backgroundColor: theme.vars ? `rgba(${theme.vars.palette.primary.mainChannel} / ${theme.vars.palette.action.selectedOpacity})` : alpha(theme.palette.primary.main, theme.palette.action.selectedOpacity),\n    [`&.${menuItemClasses.focusVisible}`]: {\n      backgroundColor: theme.vars ? `rgba(${theme.vars.palette.primary.mainChannel} / calc(${theme.vars.palette.action.selectedOpacity} + ${theme.vars.palette.action.focusOpacity}))` : alpha(theme.palette.primary.main, theme.palette.action.selectedOpacity + theme.palette.action.focusOpacity)\n    }\n  },\n  [`&.${menuItemClasses.selected}:hover`]: {\n    backgroundColor: theme.vars ? `rgba(${theme.vars.palette.primary.mainChannel} / calc(${theme.vars.palette.action.selectedOpacity} + ${theme.vars.palette.action.hoverOpacity}))` : alpha(theme.palette.primary.main, theme.palette.action.selectedOpacity + theme.palette.action.hoverOpacity),\n    // Reset on touch devices, it doesn't add specificity\n    '@media (hover: none)': {\n      backgroundColor: theme.vars ? `rgba(${theme.vars.palette.primary.mainChannel} / ${theme.vars.palette.action.selectedOpacity})` : alpha(theme.palette.primary.main, theme.palette.action.selectedOpacity)\n    }\n  },\n  [`&.${menuItemClasses.focusVisible}`]: {\n    backgroundColor: (theme.vars || theme).palette.action.focus\n  },\n  [`&.${menuItemClasses.disabled}`]: {\n    opacity: (theme.vars || theme).palette.action.disabledOpacity\n  },\n  [`& + .${dividerClasses.root}`]: {\n    marginTop: theme.spacing(1),\n    marginBottom: theme.spacing(1)\n  },\n  [`& + .${dividerClasses.inset}`]: {\n    marginLeft: 52\n  },\n  [`& .${listItemTextClasses.root}`]: {\n    marginTop: 0,\n    marginBottom: 0\n  },\n  [`& .${listItemTextClasses.inset}`]: {\n    paddingLeft: 36\n  },\n  [`& .${listItemIconClasses.root}`]: {\n    minWidth: 36\n  },\n  variants: [{\n    props: ({\n      ownerState\n    }) => !ownerState.disableGutters,\n    style: {\n      paddingLeft: 16,\n      paddingRight: 16\n    }\n  }, {\n    props: ({\n      ownerState\n    }) => ownerState.divider,\n    style: {\n      borderBottom: `1px solid ${(theme.vars || theme).palette.divider}`,\n      backgroundClip: 'padding-box'\n    }\n  }, {\n    props: ({\n      ownerState\n    }) => !ownerState.dense,\n    style: {\n      [theme.breakpoints.up('sm')]: {\n        minHeight: 'auto'\n      }\n    }\n  }, {\n    props: ({\n      ownerState\n    }) => ownerState.dense,\n    style: {\n      minHeight: 32,\n      // https://m2.material.io/components/menus#specs > Dense\n      paddingTop: 4,\n      paddingBottom: 4,\n      ...theme.typography.body2,\n      [`& .${listItemIconClasses.root} svg`]: {\n        fontSize: '1.25rem'\n      }\n    }\n  }]\n})));\nconst MenuItem = /*#__PURE__*/React.forwardRef(function MenuItem(inProps, ref) {\n  const props = useDefaultProps({\n    props: inProps,\n    name: 'MuiMenuItem'\n  });\n  const {\n    autoFocus = false,\n    component = 'li',\n    dense = false,\n    divider = false,\n    disableGutters = false,\n    focusVisibleClassName,\n    role = 'menuitem',\n    tabIndex: tabIndexProp,\n    className,\n    ...other\n  } = props;\n  const context = React.useContext(ListContext);\n  const childContext = React.useMemo(() => ({\n    dense: dense || context.dense || false,\n    disableGutters\n  }), [context.dense, dense, disableGutters]);\n  const menuItemRef = React.useRef(null);\n  useEnhancedEffect(() => {\n    if (autoFocus) {\n      if (menuItemRef.current) {\n        menuItemRef.current.focus();\n      } else if (process.env.NODE_ENV !== 'production') {\n        console.error('MUI: Unable to set focus to a MenuItem whose component has not been rendered.');\n      }\n    }\n  }, [autoFocus]);\n  const ownerState = {\n    ...props,\n    dense: childContext.dense,\n    divider,\n    disableGutters\n  };\n  const classes = useUtilityClasses(props);\n  const handleRef = useForkRef(menuItemRef, ref);\n  let tabIndex;\n  if (!props.disabled) {\n    tabIndex = tabIndexProp !== undefined ? tabIndexProp : -1;\n  }\n  return /*#__PURE__*/_jsx(ListContext.Provider, {\n    value: childContext,\n    children: /*#__PURE__*/_jsx(MenuItemRoot, {\n      ref: handleRef,\n      role: role,\n      tabIndex: tabIndex,\n      component: component,\n      focusVisibleClassName: clsx(classes.focusVisible, focusVisibleClassName),\n      className: clsx(classes.root, className),\n      ...other,\n      ownerState: ownerState,\n      classes: classes\n    })\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? MenuItem.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * If `true`, the list item is focused during the first mount.\n   * Focus will also be triggered if the value changes from false to true.\n   * @default false\n   */\n  autoFocus: PropTypes.bool,\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * If `true`, compact vertical padding designed for keyboard and mouse input is used.\n   * The prop defaults to the value inherited from the parent Menu component.\n   * @default false\n   */\n  dense: PropTypes.bool,\n  /**\n   * @ignore\n   */\n  disabled: PropTypes.bool,\n  /**\n   * If `true`, the left and right padding is removed.\n   * @default false\n   */\n  disableGutters: PropTypes.bool,\n  /**\n   * If `true`, a 1px light border is added to the bottom of the menu item.\n   * @default false\n   */\n  divider: PropTypes.bool,\n  /**\n   * This prop can help identify which element has keyboard focus.\n   * The class name will be applied when the element gains the focus through keyboard interaction.\n   * It's a polyfill for the [CSS :focus-visible selector](https://drafts.csswg.org/selectors-4/#the-focus-visible-pseudo).\n   * The rationale for using this feature [is explained here](https://github.com/WICG/focus-visible/blob/HEAD/explainer.md).\n   * A [polyfill can be used](https://github.com/WICG/focus-visible) to apply a `focus-visible` class to other components\n   * if needed.\n   */\n  focusVisibleClassName: PropTypes.string,\n  /**\n   * @ignore\n   */\n  role: PropTypes /* @typescript-to-proptypes-ignore */.string,\n  /**\n   * If `true`, the component is selected.\n   * @default false\n   */\n  selected: PropTypes.bool,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * @default 0\n   */\n  tabIndex: PropTypes.number\n} : void 0;\nexport default MenuItem;","'use client';\n\nimport * as React from 'react';\n\n/**\n * @ignore - internal component.\n */\nconst GridContext = /*#__PURE__*/React.createContext();\nif (process.env.NODE_ENV !== 'production') {\n  GridContext.displayName = 'GridContext';\n}\nexport default GridContext;","import generateUtilityClasses from '@mui/utils/generateUtilityClasses';\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\nexport function getGridUtilityClass(slot) {\n  return generateUtilityClass('MuiGrid', slot);\n}\nconst SPACINGS = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\nconst DIRECTIONS = ['column-reverse', 'column', 'row-reverse', 'row'];\nconst WRAPS = ['nowrap', 'wrap-reverse', 'wrap'];\nconst GRID_SIZES = ['auto', true, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12];\nconst gridClasses = generateUtilityClasses('MuiGrid', ['root', 'container', 'item', 'zeroMinWidth',\n// spacings\n...SPACINGS.map(spacing => `spacing-xs-${spacing}`),\n// direction values\n...DIRECTIONS.map(direction => `direction-xs-${direction}`),\n// wrap values\n...WRAPS.map(wrap => `wrap-xs-${wrap}`),\n// grid sizes for all breakpoints\n...GRID_SIZES.map(size => `grid-xs-${size}`), ...GRID_SIZES.map(size => `grid-sm-${size}`), ...GRID_SIZES.map(size => `grid-md-${size}`), ...GRID_SIZES.map(size => `grid-lg-${size}`), ...GRID_SIZES.map(size => `grid-xl-${size}`)]);\nexport default gridClasses;","'use client';\n\n// A grid component using the following libs as inspiration.\n//\n// For the implementation:\n// - https://getbootstrap.com/docs/4.3/layout/grid/\n// - https://github.com/kristoferjoseph/flexboxgrid/blob/master/src/css/flexboxgrid.css\n// - https://github.com/roylee0704/react-flexbox-grid\n// - https://material.angularjs.org/latest/layout/introduction\n//\n// Follow this flexbox Guide to better understand the underlying model:\n// - https://css-tricks.com/snippets/css/a-guide-to-flexbox/\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { handleBreakpoints, unstable_resolveBreakpointValues as resolveBreakpointValues } from '@mui/system';\nimport { extendSxProp } from '@mui/system/styleFunctionSx';\nimport composeClasses from '@mui/utils/composeClasses';\nimport requirePropFactory from \"../utils/requirePropFactory.js\";\nimport styled from \"../styles/styled.js\";\nimport { useDefaultProps } from \"../DefaultPropsProvider/index.js\";\nimport useTheme from \"../styles/useTheme.js\";\nimport GridContext from \"./GridContext.js\";\nimport gridClasses, { getGridUtilityClass } from \"./gridClasses.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport function generateGrid({\n  theme,\n  ownerState\n}) {\n  let size;\n  return theme.breakpoints.keys.reduce((globalStyles, breakpoint) => {\n    // Use side effect over immutability for better performance.\n    let styles = {};\n    if (ownerState[breakpoint]) {\n      size = ownerState[breakpoint];\n    }\n    if (!size) {\n      return globalStyles;\n    }\n    if (size === true) {\n      // For the auto layouting\n      styles = {\n        flexBasis: 0,\n        flexGrow: 1,\n        maxWidth: '100%'\n      };\n    } else if (size === 'auto') {\n      styles = {\n        flexBasis: 'auto',\n        flexGrow: 0,\n        flexShrink: 0,\n        maxWidth: 'none',\n        width: 'auto'\n      };\n    } else {\n      const columnsBreakpointValues = resolveBreakpointValues({\n        values: ownerState.columns,\n        breakpoints: theme.breakpoints.values\n      });\n      const columnValue = typeof columnsBreakpointValues === 'object' ? columnsBreakpointValues[breakpoint] : columnsBreakpointValues;\n      if (columnValue === undefined || columnValue === null) {\n        return globalStyles;\n      }\n      // Keep 7 significant numbers.\n      const width = `${Math.round(size / columnValue * 10e7) / 10e5}%`;\n      let more = {};\n      if (ownerState.container && ownerState.item && ownerState.columnSpacing !== 0) {\n        const themeSpacing = theme.spacing(ownerState.columnSpacing);\n        if (themeSpacing !== '0px') {\n          const fullWidth = `calc(${width} + ${themeSpacing})`;\n          more = {\n            flexBasis: fullWidth,\n            maxWidth: fullWidth\n          };\n        }\n      }\n\n      // Close to the bootstrap implementation:\n      // https://github.com/twbs/bootstrap/blob/8fccaa2439e97ec72a4b7dc42ccc1f649790adb0/scss/mixins/_grid.scss#L41\n      styles = {\n        flexBasis: width,\n        flexGrow: 0,\n        maxWidth: width,\n        ...more\n      };\n    }\n\n    // No need for a media query for the first size.\n    if (theme.breakpoints.values[breakpoint] === 0) {\n      Object.assign(globalStyles, styles);\n    } else {\n      globalStyles[theme.breakpoints.up(breakpoint)] = styles;\n    }\n    return globalStyles;\n  }, {});\n}\nexport function generateDirection({\n  theme,\n  ownerState\n}) {\n  const directionValues = resolveBreakpointValues({\n    values: ownerState.direction,\n    breakpoints: theme.breakpoints.values\n  });\n  return handleBreakpoints({\n    theme\n  }, directionValues, propValue => {\n    const output = {\n      flexDirection: propValue\n    };\n    if (propValue.startsWith('column')) {\n      output[`& > .${gridClasses.item}`] = {\n        maxWidth: 'none'\n      };\n    }\n    return output;\n  });\n}\n\n/**\n * Extracts zero value breakpoint keys before a non-zero value breakpoint key.\n * @example { xs: 0, sm: 0, md: 2, lg: 0, xl: 0 } or [0, 0, 2, 0, 0]\n * @returns [xs, sm]\n */\nfunction extractZeroValueBreakpointKeys({\n  breakpoints,\n  values\n}) {\n  let nonZeroKey = '';\n  Object.keys(values).forEach(key => {\n    if (nonZeroKey !== '') {\n      return;\n    }\n    if (values[key] !== 0) {\n      nonZeroKey = key;\n    }\n  });\n  const sortedBreakpointKeysByValue = Object.keys(breakpoints).sort((a, b) => {\n    return breakpoints[a] - breakpoints[b];\n  });\n  return sortedBreakpointKeysByValue.slice(0, sortedBreakpointKeysByValue.indexOf(nonZeroKey));\n}\nexport function generateRowGap({\n  theme,\n  ownerState\n}) {\n  const {\n    container,\n    rowSpacing\n  } = ownerState;\n  let styles = {};\n  if (container && rowSpacing !== 0) {\n    const rowSpacingValues = resolveBreakpointValues({\n      values: rowSpacing,\n      breakpoints: theme.breakpoints.values\n    });\n    let zeroValueBreakpointKeys;\n    if (typeof rowSpacingValues === 'object') {\n      zeroValueBreakpointKeys = extractZeroValueBreakpointKeys({\n        breakpoints: theme.breakpoints.values,\n        values: rowSpacingValues\n      });\n    }\n    styles = handleBreakpoints({\n      theme\n    }, rowSpacingValues, (propValue, breakpoint) => {\n      const themeSpacing = theme.spacing(propValue);\n      if (themeSpacing !== '0px') {\n        return {\n          marginTop: `calc(-1 * ${themeSpacing})`,\n          [`& > .${gridClasses.item}`]: {\n            paddingTop: themeSpacing\n          }\n        };\n      }\n      if (zeroValueBreakpointKeys?.includes(breakpoint)) {\n        return {};\n      }\n      return {\n        marginTop: 0,\n        [`& > .${gridClasses.item}`]: {\n          paddingTop: 0\n        }\n      };\n    });\n  }\n  return styles;\n}\nexport function generateColumnGap({\n  theme,\n  ownerState\n}) {\n  const {\n    container,\n    columnSpacing\n  } = ownerState;\n  let styles = {};\n  if (container && columnSpacing !== 0) {\n    const columnSpacingValues = resolveBreakpointValues({\n      values: columnSpacing,\n      breakpoints: theme.breakpoints.values\n    });\n    let zeroValueBreakpointKeys;\n    if (typeof columnSpacingValues === 'object') {\n      zeroValueBreakpointKeys = extractZeroValueBreakpointKeys({\n        breakpoints: theme.breakpoints.values,\n        values: columnSpacingValues\n      });\n    }\n    styles = handleBreakpoints({\n      theme\n    }, columnSpacingValues, (propValue, breakpoint) => {\n      const themeSpacing = theme.spacing(propValue);\n      if (themeSpacing !== '0px') {\n        const negativeValue = `calc(-1 * ${themeSpacing})`;\n        return {\n          width: `calc(100% + ${themeSpacing})`,\n          marginLeft: negativeValue,\n          [`& > .${gridClasses.item}`]: {\n            paddingLeft: themeSpacing\n          }\n        };\n      }\n      if (zeroValueBreakpointKeys?.includes(breakpoint)) {\n        return {};\n      }\n      return {\n        width: '100%',\n        marginLeft: 0,\n        [`& > .${gridClasses.item}`]: {\n          paddingLeft: 0\n        }\n      };\n    });\n  }\n  return styles;\n}\nexport function resolveSpacingStyles(spacing, breakpoints, styles = {}) {\n  // undefined/null or `spacing` <= 0\n  if (!spacing || spacing <= 0) {\n    return [];\n  }\n  // in case of string/number `spacing`\n  if (typeof spacing === 'string' && !Number.isNaN(Number(spacing)) || typeof spacing === 'number') {\n    return [styles[`spacing-xs-${String(spacing)}`]];\n  }\n  // in case of object `spacing`\n  const spacingStyles = [];\n  breakpoints.forEach(breakpoint => {\n    const value = spacing[breakpoint];\n    if (Number(value) > 0) {\n      spacingStyles.push(styles[`spacing-${breakpoint}-${String(value)}`]);\n    }\n  });\n  return spacingStyles;\n}\n\n// Default CSS values\n// flex: '0 1 auto',\n// flexDirection: 'row',\n// alignItems: 'flex-start',\n// flexWrap: 'nowrap',\n// justifyContent: 'flex-start',\nconst GridRoot = styled('div', {\n  name: 'MuiGrid',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    const {\n      container,\n      direction,\n      item,\n      spacing,\n      wrap,\n      zeroMinWidth,\n      breakpoints\n    } = ownerState;\n    let spacingStyles = [];\n\n    // in case of grid item\n    if (container) {\n      spacingStyles = resolveSpacingStyles(spacing, breakpoints, styles);\n    }\n    const breakpointsStyles = [];\n    breakpoints.forEach(breakpoint => {\n      const value = ownerState[breakpoint];\n      if (value) {\n        breakpointsStyles.push(styles[`grid-${breakpoint}-${String(value)}`]);\n      }\n    });\n    return [styles.root, container && styles.container, item && styles.item, zeroMinWidth && styles.zeroMinWidth, ...spacingStyles, direction !== 'row' && styles[`direction-xs-${String(direction)}`], wrap !== 'wrap' && styles[`wrap-xs-${String(wrap)}`], ...breakpointsStyles];\n  }\n})(\n// FIXME(romgrk): Can't use memoTheme here\n({\n  ownerState\n}) => ({\n  boxSizing: 'border-box',\n  ...(ownerState.container && {\n    display: 'flex',\n    flexWrap: 'wrap',\n    width: '100%'\n  }),\n  ...(ownerState.item && {\n    margin: 0 // For instance, it's useful when used with a `figure` element.\n  }),\n  ...(ownerState.zeroMinWidth && {\n    minWidth: 0\n  }),\n  ...(ownerState.wrap !== 'wrap' && {\n    flexWrap: ownerState.wrap\n  })\n}), generateDirection, generateRowGap, generateColumnGap, generateGrid);\nexport function resolveSpacingClasses(spacing, breakpoints) {\n  // undefined/null or `spacing` <= 0\n  if (!spacing || spacing <= 0) {\n    return [];\n  }\n  // in case of string/number `spacing`\n  if (typeof spacing === 'string' && !Number.isNaN(Number(spacing)) || typeof spacing === 'number') {\n    return [`spacing-xs-${String(spacing)}`];\n  }\n  // in case of object `spacing`\n  const classes = [];\n  breakpoints.forEach(breakpoint => {\n    const value = spacing[breakpoint];\n    if (Number(value) > 0) {\n      const className = `spacing-${breakpoint}-${String(value)}`;\n      classes.push(className);\n    }\n  });\n  return classes;\n}\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    container,\n    direction,\n    item,\n    spacing,\n    wrap,\n    zeroMinWidth,\n    breakpoints\n  } = ownerState;\n  let spacingClasses = [];\n\n  // in case of grid item\n  if (container) {\n    spacingClasses = resolveSpacingClasses(spacing, breakpoints);\n  }\n  const breakpointsClasses = [];\n  breakpoints.forEach(breakpoint => {\n    const value = ownerState[breakpoint];\n    if (value) {\n      breakpointsClasses.push(`grid-${breakpoint}-${String(value)}`);\n    }\n  });\n  const slots = {\n    root: ['root', container && 'container', item && 'item', zeroMinWidth && 'zeroMinWidth', ...spacingClasses, direction !== 'row' && `direction-xs-${String(direction)}`, wrap !== 'wrap' && `wrap-xs-${String(wrap)}`, ...breakpointsClasses]\n  };\n  return composeClasses(slots, getGridUtilityClass, classes);\n};\n\n/**\n * @deprecated Use the [`Grid2`](https://mui.com/material-ui/react-grid2/) component instead.\n */\nconst Grid = /*#__PURE__*/React.forwardRef(function Grid(inProps, ref) {\n  const themeProps = useDefaultProps({\n    props: inProps,\n    name: 'MuiGrid'\n  });\n  const {\n    breakpoints\n  } = useTheme();\n  const props = extendSxProp(themeProps);\n  const {\n    className,\n    columns: columnsProp,\n    columnSpacing: columnSpacingProp,\n    component = 'div',\n    container = false,\n    direction = 'row',\n    item = false,\n    rowSpacing: rowSpacingProp,\n    spacing = 0,\n    wrap = 'wrap',\n    zeroMinWidth = false,\n    ...other\n  } = props;\n  const rowSpacing = rowSpacingProp || spacing;\n  const columnSpacing = columnSpacingProp || spacing;\n  const columnsContext = React.useContext(GridContext);\n\n  // columns set with default breakpoint unit of 12\n  const columns = container ? columnsProp || 12 : columnsContext;\n  const breakpointsValues = {};\n  const otherFiltered = {\n    ...other\n  };\n  breakpoints.keys.forEach(breakpoint => {\n    if (other[breakpoint] != null) {\n      breakpointsValues[breakpoint] = other[breakpoint];\n      delete otherFiltered[breakpoint];\n    }\n  });\n  const ownerState = {\n    ...props,\n    columns,\n    container,\n    direction,\n    item,\n    rowSpacing,\n    columnSpacing,\n    wrap,\n    zeroMinWidth,\n    spacing,\n    ...breakpointsValues,\n    breakpoints: breakpoints.keys\n  };\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(GridContext.Provider, {\n    value: columns,\n    children: /*#__PURE__*/_jsx(GridRoot, {\n      ownerState: ownerState,\n      className: clsx(classes.root, className),\n      as: component,\n      ref: ref,\n      ...otherFiltered\n    })\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? Grid.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The number of columns.\n   * @default 12\n   */\n  columns: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.number), PropTypes.number, PropTypes.object]),\n  /**\n   * Defines the horizontal space between the type `item` components.\n   * It overrides the value of the `spacing` prop.\n   */\n  columnSpacing: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.number, PropTypes.string])), PropTypes.number, PropTypes.object, PropTypes.string]),\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * If `true`, the component will have the flex *container* behavior.\n   * You should be wrapping *items* with a *container*.\n   * @default false\n   */\n  container: PropTypes.bool,\n  /**\n   * Defines the `flex-direction` style property.\n   * It is applied for all screen sizes.\n   * @default 'row'\n   */\n  direction: PropTypes.oneOfType([PropTypes.oneOf(['column-reverse', 'column', 'row-reverse', 'row']), PropTypes.arrayOf(PropTypes.oneOf(['column-reverse', 'column', 'row-reverse', 'row'])), PropTypes.object]),\n  /**\n   * If `true`, the component will have the flex *item* behavior.\n   * You should be wrapping *items* with a *container*.\n   * @default false\n   */\n  item: PropTypes.bool,\n  /**\n   * If a number, it sets the number of columns the grid item uses.\n   * It can't be greater than the total number of columns of the container (12 by default).\n   * If 'auto', the grid item's width matches its content.\n   * If false, the prop is ignored.\n   * If true, the grid item's width grows to use the space available in the grid container.\n   * The value is applied for the `lg` breakpoint and wider screens if not overridden.\n   * @default false\n   */\n  lg: PropTypes.oneOfType([PropTypes.oneOf(['auto']), PropTypes.number, PropTypes.bool]),\n  /**\n   * If a number, it sets the number of columns the grid item uses.\n   * It can't be greater than the total number of columns of the container (12 by default).\n   * If 'auto', the grid item's width matches its content.\n   * If false, the prop is ignored.\n   * If true, the grid item's width grows to use the space available in the grid container.\n   * The value is applied for the `md` breakpoint and wider screens if not overridden.\n   * @default false\n   */\n  md: PropTypes.oneOfType([PropTypes.oneOf(['auto']), PropTypes.number, PropTypes.bool]),\n  /**\n   * Defines the vertical space between the type `item` components.\n   * It overrides the value of the `spacing` prop.\n   */\n  rowSpacing: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.number, PropTypes.string])), PropTypes.number, PropTypes.object, PropTypes.string]),\n  /**\n   * If a number, it sets the number of columns the grid item uses.\n   * It can't be greater than the total number of columns of the container (12 by default).\n   * If 'auto', the grid item's width matches its content.\n   * If false, the prop is ignored.\n   * If true, the grid item's width grows to use the space available in the grid container.\n   * The value is applied for the `sm` breakpoint and wider screens if not overridden.\n   * @default false\n   */\n  sm: PropTypes.oneOfType([PropTypes.oneOf(['auto']), PropTypes.number, PropTypes.bool]),\n  /**\n   * Defines the space between the type `item` components.\n   * It can only be used on a type `container` component.\n   * @default 0\n   */\n  spacing: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.number, PropTypes.string])), PropTypes.number, PropTypes.object, PropTypes.string]),\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * Defines the `flex-wrap` style property.\n   * It's applied for all screen sizes.\n   * @default 'wrap'\n   */\n  wrap: PropTypes.oneOf(['nowrap', 'wrap-reverse', 'wrap']),\n  /**\n   * If a number, it sets the number of columns the grid item uses.\n   * It can't be greater than the total number of columns of the container (12 by default).\n   * If 'auto', the grid item's width matches its content.\n   * If false, the prop is ignored.\n   * If true, the grid item's width grows to use the space available in the grid container.\n   * The value is applied for the `xl` breakpoint and wider screens if not overridden.\n   * @default false\n   */\n  xl: PropTypes.oneOfType([PropTypes.oneOf(['auto']), PropTypes.number, PropTypes.bool]),\n  /**\n   * If a number, it sets the number of columns the grid item uses.\n   * It can't be greater than the total number of columns of the container (12 by default).\n   * If 'auto', the grid item's width matches its content.\n   * If false, the prop is ignored.\n   * If true, the grid item's width grows to use the space available in the grid container.\n   * The value is applied for all the screen sizes with the lowest priority.\n   * @default false\n   */\n  xs: PropTypes.oneOfType([PropTypes.oneOf(['auto']), PropTypes.number, PropTypes.bool]),\n  /**\n   * If `true`, it sets `min-width: 0` on the item.\n   * Refer to the limitations section of the documentation to better understand the use case.\n   * @default false\n   */\n  zeroMinWidth: PropTypes.bool\n} : void 0;\nif (process.env.NODE_ENV !== 'production') {\n  const requireProp = requirePropFactory('Grid', Grid);\n  // eslint-disable-next-line no-useless-concat\n  Grid['propTypes' + ''] = {\n    // eslint-disable-next-line react/forbid-foreign-prop-types\n    ...Grid.propTypes,\n    direction: requireProp('container'),\n    lg: requireProp('item'),\n    md: requireProp('item'),\n    sm: requireProp('item'),\n    spacing: requireProp('container'),\n    wrap: requireProp('container'),\n    xs: requireProp('item'),\n    zeroMinWidth: requireProp('item')\n  };\n}\nexport default Grid;","import generateUtilityClasses from '@mui/utils/generateUtilityClasses';\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\nexport function getCardUtilityClass(slot) {\n  return generateUtilityClass('MuiCard', slot);\n}\nconst cardClasses = generateUtilityClasses('MuiCard', ['root']);\nexport default cardClasses;","'use client';\n\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport chainPropTypes from '@mui/utils/chainPropTypes';\nimport composeClasses from '@mui/utils/composeClasses';\nimport { styled } from \"../zero-styled/index.js\";\nimport { useDefaultProps } from \"../DefaultPropsProvider/index.js\";\nimport Paper from \"../Paper/index.js\";\nimport { getCardUtilityClass } from \"./cardClasses.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root']\n  };\n  return composeClasses(slots, getCardUtilityClass, classes);\n};\nconst CardRoot = styled(Paper, {\n  name: 'MuiCard',\n  slot: 'Root',\n  overridesResolver: (props, styles) => styles.root\n})({\n  overflow: 'hidden'\n});\nconst Card = /*#__PURE__*/React.forwardRef(function Card(inProps, ref) {\n  const props = useDefaultProps({\n    props: inProps,\n    name: 'MuiCard'\n  });\n  const {\n    className,\n    raised = false,\n    ...other\n  } = props;\n  const ownerState = {\n    ...props,\n    raised\n  };\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(CardRoot, {\n    className: clsx(classes.root, className),\n    elevation: raised ? 8 : undefined,\n    ref: ref,\n    ownerState: ownerState,\n    ...other\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? Card.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * If `true`, the card will use raised styling.\n   * @default false\n   */\n  raised: chainPropTypes(PropTypes.bool, props => {\n    if (props.raised && props.variant === 'outlined') {\n      return new Error('MUI: Combining `raised={true}` with `variant=\"outlined\"` has no effect.');\n    }\n    return null;\n  }),\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default Card;","import generateUtilityClasses from '@mui/utils/generateUtilityClasses';\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\nexport function getCardContentUtilityClass(slot) {\n  return generateUtilityClass('MuiCardContent', slot);\n}\nconst cardContentClasses = generateUtilityClasses('MuiCardContent', ['root']);\nexport default cardContentClasses;","'use client';\n\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport composeClasses from '@mui/utils/composeClasses';\nimport { styled } from \"../zero-styled/index.js\";\nimport { useDefaultProps } from \"../DefaultPropsProvider/index.js\";\nimport { getCardContentUtilityClass } from \"./cardContentClasses.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root']\n  };\n  return composeClasses(slots, getCardContentUtilityClass, classes);\n};\nconst CardContentRoot = styled('div', {\n  name: 'MuiCardContent',\n  slot: 'Root',\n  overridesResolver: (props, styles) => styles.root\n})({\n  padding: 16,\n  '&:last-child': {\n    paddingBottom: 24\n  }\n});\nconst CardContent = /*#__PURE__*/React.forwardRef(function CardContent(inProps, ref) {\n  const props = useDefaultProps({\n    props: inProps,\n    name: 'MuiCardContent'\n  });\n  const {\n    className,\n    component = 'div',\n    ...other\n  } = props;\n  const ownerState = {\n    ...props,\n    component\n  };\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(CardContentRoot, {\n    as: component,\n    className: clsx(classes.root, className),\n    ownerState: ownerState,\n    ref: ref,\n    ...other\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? CardContent.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default CardContent;","\"use client\";\n\nimport createSvgIcon from \"./utils/createSvgIcon.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon(/*#__PURE__*/_jsx(\"path\", {\n  d: \"M21 18v1c0 1.1-.9 2-2 2H5c-1.11 0-2-.9-2-2V5c0-1.1.89-2 2-2h14c1.1 0 2 .9 2 2v1h-9c-1.11 0-2 .9-2 2v8c0 1.1.89 2 2 2zm-9-2h10V8H12zm4-2.5c-.83 0-1.5-.67-1.5-1.5s.67-1.5 1.5-1.5 1.5.67 1.5 1.5-.67 1.5-1.5 1.5\"\n}), 'AccountBalanceWallet');","import React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport {\n  Box,\n  Container,\n  Typography,\n  IconButton,\n  AppBar,\n  Toolbar,\n  Paper,\n  CircularProgress,\n  Divider,\n  Grid,\n  Card,\n  CardContent,\n  Chip,\n  MenuItem,\n  Select,\n  FormControl,\n  InputLabel,\n  SelectChangeEvent\n} from '@mui/material';\nimport ArrowBackIcon from '@mui/icons-material/ArrowBack';\nimport AccountBalanceWalletIcon from '@mui/icons-material/AccountBalanceWallet';\nimport Routes from '../routes/Routes';\nimport { getDateList, getPlayerBalanceByDate } from '../data/firebase';\nimport { Player } from '../data/models';\n\ninterface DateItem {\n  date: string;\n  key: string;\n}\n\nconst HistoryByDayScreen: React.FC = () => {\n  const navigate = useNavigate();\n  const [selectedDate, setSelectedDate] = useState<DateItem | null>(null);\n  const [dateList, setDateList] = useState<DateItem[]>([]);\n  const [playerBalances, setPlayerBalances] = useState<Player[]>([]);\n  const [loadingDates, setLoadingDates] = useState(true);\n  const [loadingBalances, setLoadingBalances] = useState(false);\n\n  useEffect(() => {\n    // Load date list when component mounts\n    fetchDateList();\n  }, []);\n\n  const fetchDateList = async () => {\n    setLoadingDates(true);\n    try {\n      const dates = await getDateList();\n      setDateList(dates);\n      \n      // Set default selected date to the most recent one if available\n      if (dates.length > 0) {\n        setSelectedDate(dates[0]);\n      }\n    } catch (error) {\n      console.error('Error loading dates:', error);\n    } finally {\n      setLoadingDates(false);\n    }\n  };\n\n  useEffect(() => {\n    if (selectedDate) {\n      loadPlayerBalances();\n    }\n  }, [selectedDate]);\n\n  const loadPlayerBalances = async () => {\n    if (!selectedDate) return;\n    \n    setLoadingBalances(true);\n    try {\n      const balances = await getPlayerBalanceByDate(selectedDate.key);\n      setPlayerBalances(balances);\n    } catch (error) {\n      console.error('Error loading player balances:', error);\n    } finally {\n      setLoadingBalances(false);\n    }\n  };\n\n  const handleDateChange = (event: SelectChangeEvent) => {\n    const selectedKey = event.target.value;\n    const selected = dateList.find(d => d.key === selectedKey) || null;\n    setSelectedDate(selected);\n  };\n\n  const formatDisplayDate = (dateString: string) => {\n    const date = new Date(dateString);\n    return date.toLocaleDateString('en-US', {\n      year: 'numeric',\n      month: 'long',\n      day: 'numeric'\n    });\n  };\n\n  return (\n    <Box sx={{ flexGrow: 1 }}>\n      <AppBar position=\"static\" sx={{ bgcolor: 'lightgray' }}>\n        <Toolbar>\n          <IconButton\n            edge=\"start\"\n            color=\"inherit\"\n            aria-label=\"back\"\n            onClick={() => navigate(Routes.HOME)}\n            sx={{ mr: 2 }}\n          >\n            <ArrowBackIcon />\n          </IconButton>\n          <Typography variant=\"h6\" component=\"div\" sx={{ flexGrow: 1 }}>\n            History By Day\n          </Typography>\n        </Toolbar>\n      </AppBar>\n\n      <Container maxWidth=\"md\" sx={{ mt: 4 }}>\n        <Paper elevation={3} sx={{ p: 3, mb: 4 }}>\n          <Typography variant=\"h6\" gutterBottom>\n            Select Date\n          </Typography>\n          <Divider sx={{ mb: 2 }} />\n          \n          {loadingDates ? (\n            <Box sx={{ display: 'flex', justifyContent: 'center', p: 2 }}>\n              <CircularProgress size={24} />\n            </Box>\n          ) : (\n            <FormControl fullWidth variant=\"outlined\">\n              <InputLabel id=\"date-select-label\">Date</InputLabel>\n              <Select\n                labelId=\"date-select-label\"\n                id=\"date-select\"\n                value={selectedDate?.key || ''}\n                onChange={handleDateChange}\n                label=\"Date\"\n                disabled={dateList.length === 0}\n              >\n                {dateList.length === 0 ? (\n                  <MenuItem value=\"\">No dates available</MenuItem>\n                ) : (\n                  dateList.map((dateItem) => (\n                    <MenuItem key={dateItem.key} value={dateItem.key}>\n                      {formatDisplayDate(dateItem.date)}\n                    </MenuItem>\n                  ))\n                )}\n              </Select>\n            </FormControl>\n          )}\n        </Paper>\n\n        {selectedDate && (\n          <Box sx={{ width: '100%' }}>\n            {loadingBalances ? (\n              <Box sx={{ display: 'flex', justifyContent: 'center', p: 3 }}>\n                <CircularProgress />\n              </Box>\n            ) : playerBalances.length === 0 ? (\n              <Paper elevation={3} sx={{ p: 3 }}>\n                <Typography variant=\"body1\" align=\"center\">\n                  No player balance data found for this date\n                </Typography>\n              </Paper>\n            ) : (\n              <Paper elevation={3} sx={{ p: 3 }}>\n                <Typography variant=\"h6\" gutterBottom>\n                  Player Balances on {selectedDate ? formatDisplayDate(selectedDate.date) : ''}\n                </Typography>\n                <Divider sx={{ mb: 2 }} />\n                \n                <Grid container spacing={2}>\n                  {playerBalances.map((player) => (\n                    <Grid item xs={12} sm={6} md={4} key={player.id}>\n                      <Card variant=\"outlined\">\n                        <CardContent>\n                          <Typography variant=\"h6\" gutterBottom>\n                            {player.name}\n                          </Typography>\n                          <Box sx={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center' }}>\n                            <Typography variant=\"body2\" color=\"text.secondary\">\n                              Balance:\n                            </Typography>\n                            <Chip\n                              icon={<AccountBalanceWalletIcon />}\n                              label={player.balance}\n                              color={player.balance > 0 ? 'success' : player.balance < 0 ? 'error' : 'default'}\n                              variant=\"outlined\"\n                            />\n                          </Box>\n                        </CardContent>\n                      </Card>\n                    </Grid>\n                  ))}\n                </Grid>\n              </Paper>\n            )}\n          </Box>\n        )}\n      </Container>\n    </Box>\n  );\n};\n\nexport default HistoryByDayScreen; "],"names":["app","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","database","getDatabase","playersRef","ref","addPlayer","async","newPlayerRef","push","playerId","key","set","id","name","balance","getPlayers","snapshot","get","players","exists","forEach","childSnapshot","player","val","datesListRef","getDateList","dates","date","child","sort","a","b","Date","getTime","datesRef","addGame","newDateRef","dateId","Error","dateData","gameData","playerBalanceRef","playerRef","playerData","playerName","profit","error","console","getPlayerBalanceByDate","dateKey","balanceRef","playerSnapshot","undefined","updatePlayersBalancesAfterGame","allPlayers","gamePlayerMap","Map","updatePromises","map","gamePlayerData","newBalance","log","update","updatePlayerBalance","Promise","resolve","all","generateUtilityClasses","getMenuItemUtilityClass","slot","generateUtilityClass","MenuItemRoot","styled","ButtonBase","shouldForwardProp","prop","rootShouldForwardProp","overridesResolver","props","styles","ownerState","root","dense","divider","disableGutters","gutters","memoTheme","_ref","theme","typography","body1","display","justifyContent","alignItems","position","textDecoration","minHeight","paddingTop","paddingBottom","boxSizing","whiteSpace","backgroundColor","vars","palette","action","hover","menuItemClasses","selected","primary","mainChannel","selectedOpacity","alpha","main","focusVisible","focusOpacity","hoverOpacity","focus","disabled","opacity","disabledOpacity","dividerClasses","marginTop","spacing","marginBottom","inset","marginLeft","listItemTextClasses","paddingLeft","listItemIconClasses","minWidth","variants","_ref2","style","paddingRight","_ref3","borderBottom","backgroundClip","_ref4","breakpoints","up","_ref5","body2","fontSize","React","inProps","useDefaultProps","autoFocus","component","focusVisibleClassName","role","tabIndex","tabIndexProp","className","other","context","ListContext","childContext","menuItemRef","useEnhancedEffect","current","classes","slots","composedClasses","composeClasses","useUtilityClasses","handleRef","useForkRef","_jsx","Provider","value","children","clsx","getGridUtilityClass","GRID_SIZES","direction","wrap","size","extractZeroValueBreakpointKeys","values","nonZeroKey","Object","keys","sortedBreakpointKeysByValue","slice","indexOf","GridRoot","container","item","zeroMinWidth","spacingStyles","arguments","length","Number","isNaN","String","breakpoint","resolveSpacingStyles","breakpointsStyles","_ref6","flexWrap","width","margin","directionValues","resolveBreakpointValues","handleBreakpoints","propValue","output","flexDirection","startsWith","gridClasses","maxWidth","rowSpacing","rowSpacingValues","zeroValueBreakpointKeys","themeSpacing","includes","columnSpacing","columnSpacingValues","reduce","globalStyles","flexBasis","flexGrow","flexShrink","columnsBreakpointValues","columns","columnValue","Math","round","more","fullWidth","assign","spacingClasses","resolveSpacingClasses","breakpointsClasses","Grid","themeProps","useTheme","extendSxProp","columnsProp","columnSpacingProp","rowSpacingProp","columnsContext","GridContext","breakpointsValues","otherFiltered","as","getCardUtilityClass","CardRoot","Paper","overflow","raised","elevation","getCardContentUtilityClass","CardContentRoot","padding","createSvgIcon","d","HistoryByDayScreen","navigate","useNavigate","selectedDate","setSelectedDate","useState","dateList","setDateList","playerBalances","setPlayerBalances","loadingDates","setLoadingDates","loadingBalances","setLoadingBalances","useEffect","fetchDateList","loadPlayerBalances","balances","formatDisplayDate","dateString","toLocaleDateString","year","month","day","_jsxs","Box","sx","AppBar","bgcolor","Toolbar","IconButton","edge","color","onClick","Routes","HOME","mr","ArrowBackIcon","Typography","variant","Container","mt","p","mb","gutterBottom","Divider","CircularProgress","FormControl","InputLabel","Select","labelId","onChange","event","selectedKey","target","find","label","MenuItem","dateItem","align","xs","sm","md","Card","CardContent","Chip","icon","AccountBalanceWalletIcon"],"sourceRoot":""}