{"version":3,"file":"static/js/416.f72dff71.chunk.js","mappings":"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","sources":["../node_modules/@mui/material/Dialog/dialogClasses.js","../node_modules/@mui/material/Dialog/DialogContext.js","../node_modules/@mui/material/Dialog/Dialog.js","../node_modules/@mui/material/DialogTitle/dialogTitleClasses.js","../node_modules/@mui/material/DialogTitle/DialogTitle.js","../node_modules/@mui/material/DialogContent/dialogContentClasses.js","../node_modules/@mui/material/DialogContent/DialogContent.js","../node_modules/@mui/material/DialogActions/dialogActionsClasses.js","../node_modules/@mui/material/DialogActions/DialogActions.js","../node_modules/@mui/icons-material/esm/Add.js","../node_modules/@mui/icons-material/esm/Delete.js","screens/StartGameScreen.tsx","data/firebase.ts"],"sourcesContent":["import generateUtilityClasses from '@mui/utils/generateUtilityClasses';\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\nexport function getDialogUtilityClass(slot) {\n  return generateUtilityClass('MuiDialog', slot);\n}\nconst dialogClasses = generateUtilityClasses('MuiDialog', ['root', 'scrollPaper', 'scrollBody', 'container', 'paper', 'paperScrollPaper', 'paperScrollBody', 'paperWidthFalse', 'paperWidthXs', 'paperWidthSm', 'paperWidthMd', 'paperWidthLg', 'paperWidthXl', 'paperFullWidth', 'paperFullScreen']);\nexport default dialogClasses;","'use client';\n\nimport * as React from 'react';\nconst DialogContext = /*#__PURE__*/React.createContext({});\nif (process.env.NODE_ENV !== 'production') {\n  DialogContext.displayName = 'DialogContext';\n}\nexport default DialogContext;","'use client';\n\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport composeClasses from '@mui/utils/composeClasses';\nimport useId from '@mui/utils/useId';\nimport capitalize from \"../utils/capitalize.js\";\nimport Modal from \"../Modal/index.js\";\nimport Fade from \"../Fade/index.js\";\nimport Paper from \"../Paper/index.js\";\nimport dialogClasses, { getDialogUtilityClass } from \"./dialogClasses.js\";\nimport DialogContext from \"./DialogContext.js\";\nimport Backdrop from \"../Backdrop/index.js\";\nimport { styled, useTheme } from \"../zero-styled/index.js\";\nimport memoTheme from \"../utils/memoTheme.js\";\nimport { useDefaultProps } from \"../DefaultPropsProvider/index.js\";\nimport useSlot from \"../utils/useSlot.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst DialogBackdrop = styled(Backdrop, {\n  name: 'MuiDialog',\n  slot: 'Backdrop',\n  overrides: (props, styles) => styles.backdrop\n})({\n  // Improve scrollable dialog support.\n  zIndex: -1\n});\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    scroll,\n    maxWidth,\n    fullWidth,\n    fullScreen\n  } = ownerState;\n  const slots = {\n    root: ['root'],\n    container: ['container', `scroll${capitalize(scroll)}`],\n    paper: ['paper', `paperScroll${capitalize(scroll)}`, `paperWidth${capitalize(String(maxWidth))}`, fullWidth && 'paperFullWidth', fullScreen && 'paperFullScreen']\n  };\n  return composeClasses(slots, getDialogUtilityClass, classes);\n};\nconst DialogRoot = styled(Modal, {\n  name: 'MuiDialog',\n  slot: 'Root',\n  overridesResolver: (props, styles) => styles.root\n})({\n  '@media print': {\n    // Use !important to override the Modal inline-style.\n    position: 'absolute !important'\n  }\n});\nconst DialogContainer = styled('div', {\n  name: 'MuiDialog',\n  slot: 'Container',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.container, styles[`scroll${capitalize(ownerState.scroll)}`]];\n  }\n})({\n  height: '100%',\n  '@media print': {\n    height: 'auto'\n  },\n  // We disable the focus ring for mouse, touch and keyboard users.\n  outline: 0,\n  variants: [{\n    props: {\n      scroll: 'paper'\n    },\n    style: {\n      display: 'flex',\n      justifyContent: 'center',\n      alignItems: 'center'\n    }\n  }, {\n    props: {\n      scroll: 'body'\n    },\n    style: {\n      overflowY: 'auto',\n      overflowX: 'hidden',\n      textAlign: 'center',\n      '&::after': {\n        content: '\"\"',\n        display: 'inline-block',\n        verticalAlign: 'middle',\n        height: '100%',\n        width: '0'\n      }\n    }\n  }]\n});\nconst DialogPaper = styled(Paper, {\n  name: 'MuiDialog',\n  slot: 'Paper',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.paper, styles[`scrollPaper${capitalize(ownerState.scroll)}`], styles[`paperWidth${capitalize(String(ownerState.maxWidth))}`], ownerState.fullWidth && styles.paperFullWidth, ownerState.fullScreen && styles.paperFullScreen];\n  }\n})(memoTheme(({\n  theme\n}) => ({\n  margin: 32,\n  position: 'relative',\n  overflowY: 'auto',\n  '@media print': {\n    overflowY: 'visible',\n    boxShadow: 'none'\n  },\n  variants: [{\n    props: {\n      scroll: 'paper'\n    },\n    style: {\n      display: 'flex',\n      flexDirection: 'column',\n      maxHeight: 'calc(100% - 64px)'\n    }\n  }, {\n    props: {\n      scroll: 'body'\n    },\n    style: {\n      display: 'inline-block',\n      verticalAlign: 'middle',\n      textAlign: 'initial'\n    }\n  }, {\n    props: ({\n      ownerState\n    }) => !ownerState.maxWidth,\n    style: {\n      maxWidth: 'calc(100% - 64px)'\n    }\n  }, {\n    props: {\n      maxWidth: 'xs'\n    },\n    style: {\n      maxWidth: theme.breakpoints.unit === 'px' ? Math.max(theme.breakpoints.values.xs, 444) : `max(${theme.breakpoints.values.xs}${theme.breakpoints.unit}, 444px)`,\n      [`&.${dialogClasses.paperScrollBody}`]: {\n        [theme.breakpoints.down(Math.max(theme.breakpoints.values.xs, 444) + 32 * 2)]: {\n          maxWidth: 'calc(100% - 64px)'\n        }\n      }\n    }\n  }, ...Object.keys(theme.breakpoints.values).filter(maxWidth => maxWidth !== 'xs').map(maxWidth => ({\n    props: {\n      maxWidth\n    },\n    style: {\n      maxWidth: `${theme.breakpoints.values[maxWidth]}${theme.breakpoints.unit}`,\n      [`&.${dialogClasses.paperScrollBody}`]: {\n        [theme.breakpoints.down(theme.breakpoints.values[maxWidth] + 32 * 2)]: {\n          maxWidth: 'calc(100% - 64px)'\n        }\n      }\n    }\n  })), {\n    props: ({\n      ownerState\n    }) => ownerState.fullWidth,\n    style: {\n      width: 'calc(100% - 64px)'\n    }\n  }, {\n    props: ({\n      ownerState\n    }) => ownerState.fullScreen,\n    style: {\n      margin: 0,\n      width: '100%',\n      maxWidth: '100%',\n      height: '100%',\n      maxHeight: 'none',\n      borderRadius: 0,\n      [`&.${dialogClasses.paperScrollBody}`]: {\n        margin: 0,\n        maxWidth: '100%'\n      }\n    }\n  }]\n})));\n\n/**\n * Dialogs are overlaid modal paper based components with a backdrop.\n */\nconst Dialog = /*#__PURE__*/React.forwardRef(function Dialog(inProps, ref) {\n  const props = useDefaultProps({\n    props: inProps,\n    name: 'MuiDialog'\n  });\n  const theme = useTheme();\n  const defaultTransitionDuration = {\n    enter: theme.transitions.duration.enteringScreen,\n    exit: theme.transitions.duration.leavingScreen\n  };\n  const {\n    'aria-describedby': ariaDescribedby,\n    'aria-labelledby': ariaLabelledbyProp,\n    'aria-modal': ariaModal = true,\n    BackdropComponent,\n    BackdropProps,\n    children,\n    className,\n    disableEscapeKeyDown = false,\n    fullScreen = false,\n    fullWidth = false,\n    maxWidth = 'sm',\n    onBackdropClick,\n    onClick,\n    onClose,\n    open,\n    PaperComponent = Paper,\n    PaperProps = {},\n    scroll = 'paper',\n    slots = {},\n    slotProps = {},\n    TransitionComponent = Fade,\n    transitionDuration = defaultTransitionDuration,\n    TransitionProps,\n    ...other\n  } = props;\n  const ownerState = {\n    ...props,\n    disableEscapeKeyDown,\n    fullScreen,\n    fullWidth,\n    maxWidth,\n    scroll\n  };\n  const classes = useUtilityClasses(ownerState);\n  const backdropClick = React.useRef();\n  const handleMouseDown = event => {\n    // We don't want to close the dialog when clicking the dialog content.\n    // Make sure the event starts and ends on the same DOM element.\n    backdropClick.current = event.target === event.currentTarget;\n  };\n  const handleBackdropClick = event => {\n    if (onClick) {\n      onClick(event);\n    }\n\n    // Ignore the events not coming from the \"backdrop\".\n    if (!backdropClick.current) {\n      return;\n    }\n    backdropClick.current = null;\n    if (onBackdropClick) {\n      onBackdropClick(event);\n    }\n    if (onClose) {\n      onClose(event, 'backdropClick');\n    }\n  };\n  const ariaLabelledby = useId(ariaLabelledbyProp);\n  const dialogContextValue = React.useMemo(() => {\n    return {\n      titleId: ariaLabelledby\n    };\n  }, [ariaLabelledby]);\n  const backwardCompatibleSlots = {\n    transition: TransitionComponent,\n    ...slots\n  };\n  const backwardCompatibleSlotProps = {\n    transition: TransitionProps,\n    paper: PaperProps,\n    backdrop: BackdropProps,\n    ...slotProps\n  };\n  const externalForwardedProps = {\n    slots: backwardCompatibleSlots,\n    slotProps: backwardCompatibleSlotProps\n  };\n  const [RootSlot, rootSlotProps] = useSlot('root', {\n    elementType: DialogRoot,\n    shouldForwardComponentProp: true,\n    externalForwardedProps,\n    ownerState,\n    className: clsx(classes.root, className),\n    ref\n  });\n  const [BackdropSlot, backdropSlotProps] = useSlot('backdrop', {\n    elementType: DialogBackdrop,\n    shouldForwardComponentProp: true,\n    externalForwardedProps,\n    ownerState\n  });\n  const [PaperSlot, paperSlotProps] = useSlot('paper', {\n    elementType: DialogPaper,\n    shouldForwardComponentProp: true,\n    externalForwardedProps,\n    ownerState,\n    className: clsx(classes.paper, PaperProps.className)\n  });\n  const [ContainerSlot, containerSlotProps] = useSlot('container', {\n    elementType: DialogContainer,\n    externalForwardedProps,\n    ownerState,\n    className: clsx(classes.container)\n  });\n  const [TransitionSlot, transitionSlotProps] = useSlot('transition', {\n    elementType: Fade,\n    externalForwardedProps,\n    ownerState,\n    additionalProps: {\n      appear: true,\n      in: open,\n      timeout: transitionDuration,\n      role: 'presentation'\n    }\n  });\n  return /*#__PURE__*/_jsx(RootSlot, {\n    closeAfterTransition: true,\n    slots: {\n      backdrop: BackdropSlot\n    },\n    slotProps: {\n      backdrop: {\n        transitionDuration,\n        as: BackdropComponent,\n        ...backdropSlotProps\n      }\n    },\n    disableEscapeKeyDown: disableEscapeKeyDown,\n    onClose: onClose,\n    open: open,\n    onClick: handleBackdropClick,\n    ...rootSlotProps,\n    ...other,\n    children: /*#__PURE__*/_jsx(TransitionSlot, {\n      ...transitionSlotProps,\n      children: /*#__PURE__*/_jsx(ContainerSlot, {\n        onMouseDown: handleMouseDown,\n        ...containerSlotProps,\n        children: /*#__PURE__*/_jsx(PaperSlot, {\n          as: PaperComponent,\n          elevation: 24,\n          role: \"dialog\",\n          \"aria-describedby\": ariaDescribedby,\n          \"aria-labelledby\": ariaLabelledby,\n          \"aria-modal\": ariaModal,\n          ...paperSlotProps,\n          children: /*#__PURE__*/_jsx(DialogContext.Provider, {\n            value: dialogContextValue,\n            children: children\n          })\n        })\n      })\n    })\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? Dialog.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * The id(s) of the element(s) that describe the dialog.\n   */\n  'aria-describedby': PropTypes.string,\n  /**\n   * The id(s) of the element(s) that label the dialog.\n   */\n  'aria-labelledby': PropTypes.string,\n  /**\n   * Informs assistive technologies that the element is modal.\n   * It's added on the element with role=\"dialog\".\n   * @default true\n   */\n  'aria-modal': PropTypes.oneOfType([PropTypes.oneOf(['false', 'true']), PropTypes.bool]),\n  /**\n   * A backdrop component. This prop enables custom backdrop rendering.\n   * @deprecated Use `slots.backdrop` instead. While this prop currently works, it will be removed in the next major version.\n   * Use the `slots.backdrop` prop to make your application ready for the next version of Material UI.\n   * @default styled(Backdrop, {\n   *   name: 'MuiModal',\n   *   slot: 'Backdrop',\n   *   overridesResolver: (props, styles) => {\n   *     return styles.backdrop;\n   *   },\n   * })({\n   *   zIndex: -1,\n   * })\n   */\n  BackdropComponent: PropTypes.elementType,\n  /**\n   * @ignore\n   */\n  BackdropProps: PropTypes.object,\n  /**\n   * Dialog children, usually the included sub-components.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * If `true`, hitting escape will not fire the `onClose` callback.\n   * @default false\n   */\n  disableEscapeKeyDown: PropTypes.bool,\n  /**\n   * If `true`, the dialog is full-screen.\n   * @default false\n   */\n  fullScreen: PropTypes.bool,\n  /**\n   * If `true`, the dialog stretches to `maxWidth`.\n   *\n   * Notice that the dialog width grow is limited by the default margin.\n   * @default false\n   */\n  fullWidth: PropTypes.bool,\n  /**\n   * Determine the max-width of the dialog.\n   * The dialog width grows with the size of the screen.\n   * Set to `false` to disable `maxWidth`.\n   * @default 'sm'\n   */\n  maxWidth: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['xs', 'sm', 'md', 'lg', 'xl', false]), PropTypes.string]),\n  /**\n   * Callback fired when the backdrop is clicked.\n   * @deprecated Use the `onClose` prop with the `reason` argument to handle the `backdropClick` events.\n   */\n  onBackdropClick: PropTypes.func,\n  /**\n   * @ignore\n   */\n  onClick: PropTypes.func,\n  /**\n   * Callback fired when the component requests to be closed.\n   *\n   * @param {object} event The event source of the callback.\n   * @param {string} reason Can be: `\"escapeKeyDown\"`, `\"backdropClick\"`.\n   */\n  onClose: PropTypes.func,\n  /**\n   * If `true`, the component is shown.\n   */\n  open: PropTypes.bool.isRequired,\n  /**\n   * The component used to render the body of the dialog.\n   * @default Paper\n   */\n  PaperComponent: PropTypes.elementType,\n  /**\n   * Props applied to the [`Paper`](https://mui.com/material-ui/api/paper/) element.\n   * @default {}\n   * @deprecated Use `slotProps.paper` instead. This prop will be removed in v7. See [Migrating from deprecated APIs](/material-ui/migration/migrating-from-deprecated-apis/) for more details.\n   */\n  PaperProps: PropTypes.object,\n  /**\n   * Determine the container for scrolling the dialog.\n   * @default 'paper'\n   */\n  scroll: PropTypes.oneOf(['body', 'paper']),\n  /**\n   * The props used for each slot inside.\n   * @default {}\n   */\n  slotProps: PropTypes.shape({\n    backdrop: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\n    container: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\n    paper: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\n    root: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\n    transition: PropTypes.oneOfType([PropTypes.func, PropTypes.object])\n  }),\n  /**\n   * The components used for each slot inside.\n   * @default {}\n   */\n  slots: PropTypes.shape({\n    backdrop: PropTypes.elementType,\n    container: PropTypes.elementType,\n    paper: PropTypes.elementType,\n    root: PropTypes.elementType,\n    transition: PropTypes.elementType\n  }),\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * The component used for the transition.\n   * [Follow this guide](https://mui.com/material-ui/transitions/#transitioncomponent-prop) to learn more about the requirements for this component.\n   * @default Fade\n   * @deprecated Use `slots.transition` instead. This prop will be removed in v7. See [Migrating from deprecated APIs](/material-ui/migration/migrating-from-deprecated-apis/) for more details.\n   */\n  TransitionComponent: PropTypes.elementType,\n  /**\n   * The duration for the transition, in milliseconds.\n   * You may specify a single timeout for all transitions, or individually with an object.\n   * @default {\n   *   enter: theme.transitions.duration.enteringScreen,\n   *   exit: theme.transitions.duration.leavingScreen,\n   * }\n   */\n  transitionDuration: PropTypes.oneOfType([PropTypes.number, PropTypes.shape({\n    appear: PropTypes.number,\n    enter: PropTypes.number,\n    exit: PropTypes.number\n  })]),\n  /**\n   * Props applied to the transition element.\n   * By default, the element is based on this [`Transition`](https://reactcommunity.org/react-transition-group/transition/) component.\n   * @deprecated Use `slotProps.transition` instead. This prop will be removed in v7. See [Migrating from deprecated APIs](/material-ui/migration/migrating-from-deprecated-apis/) for more details.\n   */\n  TransitionProps: PropTypes.object\n} : void 0;\nexport default Dialog;","import generateUtilityClasses from '@mui/utils/generateUtilityClasses';\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\nexport function getDialogTitleUtilityClass(slot) {\n  return generateUtilityClass('MuiDialogTitle', slot);\n}\nconst dialogTitleClasses = generateUtilityClasses('MuiDialogTitle', ['root']);\nexport default dialogTitleClasses;","'use client';\n\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport composeClasses from '@mui/utils/composeClasses';\nimport Typography from \"../Typography/index.js\";\nimport { styled } from \"../zero-styled/index.js\";\nimport { useDefaultProps } from \"../DefaultPropsProvider/index.js\";\nimport { getDialogTitleUtilityClass } from \"./dialogTitleClasses.js\";\nimport DialogContext from \"../Dialog/DialogContext.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root']\n  };\n  return composeClasses(slots, getDialogTitleUtilityClass, classes);\n};\nconst DialogTitleRoot = styled(Typography, {\n  name: 'MuiDialogTitle',\n  slot: 'Root',\n  overridesResolver: (props, styles) => styles.root\n})({\n  padding: '16px 24px',\n  flex: '0 0 auto'\n});\nconst DialogTitle = /*#__PURE__*/React.forwardRef(function DialogTitle(inProps, ref) {\n  const props = useDefaultProps({\n    props: inProps,\n    name: 'MuiDialogTitle'\n  });\n  const {\n    className,\n    id: idProp,\n    ...other\n  } = props;\n  const ownerState = props;\n  const classes = useUtilityClasses(ownerState);\n  const {\n    titleId = idProp\n  } = React.useContext(DialogContext);\n  return /*#__PURE__*/_jsx(DialogTitleRoot, {\n    component: \"h2\",\n    className: clsx(classes.root, className),\n    ownerState: ownerState,\n    ref: ref,\n    variant: \"h6\",\n    id: idProp ?? titleId,\n    ...other\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? DialogTitle.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * @ignore\n   */\n  id: PropTypes.string,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default DialogTitle;","import generateUtilityClasses from '@mui/utils/generateUtilityClasses';\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\nexport function getDialogContentUtilityClass(slot) {\n  return generateUtilityClass('MuiDialogContent', slot);\n}\nconst dialogContentClasses = generateUtilityClasses('MuiDialogContent', ['root', 'dividers']);\nexport default dialogContentClasses;","'use client';\n\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport composeClasses from '@mui/utils/composeClasses';\nimport { styled } from \"../zero-styled/index.js\";\nimport memoTheme from \"../utils/memoTheme.js\";\nimport { useDefaultProps } from \"../DefaultPropsProvider/index.js\";\nimport { getDialogContentUtilityClass } from \"./dialogContentClasses.js\";\nimport dialogTitleClasses from \"../DialogTitle/dialogTitleClasses.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    dividers\n  } = ownerState;\n  const slots = {\n    root: ['root', dividers && 'dividers']\n  };\n  return composeClasses(slots, getDialogContentUtilityClass, classes);\n};\nconst DialogContentRoot = styled('div', {\n  name: 'MuiDialogContent',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, ownerState.dividers && styles.dividers];\n  }\n})(memoTheme(({\n  theme\n}) => ({\n  flex: '1 1 auto',\n  // Add iOS momentum scrolling for iOS < 13.0\n  WebkitOverflowScrolling: 'touch',\n  overflowY: 'auto',\n  padding: '20px 24px',\n  variants: [{\n    props: ({\n      ownerState\n    }) => ownerState.dividers,\n    style: {\n      padding: '16px 24px',\n      borderTop: `1px solid ${(theme.vars || theme).palette.divider}`,\n      borderBottom: `1px solid ${(theme.vars || theme).palette.divider}`\n    }\n  }, {\n    props: ({\n      ownerState\n    }) => !ownerState.dividers,\n    style: {\n      [`.${dialogTitleClasses.root} + &`]: {\n        paddingTop: 0\n      }\n    }\n  }]\n})));\nconst DialogContent = /*#__PURE__*/React.forwardRef(function DialogContent(inProps, ref) {\n  const props = useDefaultProps({\n    props: inProps,\n    name: 'MuiDialogContent'\n  });\n  const {\n    className,\n    dividers = false,\n    ...other\n  } = props;\n  const ownerState = {\n    ...props,\n    dividers\n  };\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(DialogContentRoot, {\n    className: clsx(classes.root, className),\n    ownerState: ownerState,\n    ref: ref,\n    ...other\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? DialogContent.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * Display the top and bottom dividers.\n   * @default false\n   */\n  dividers: PropTypes.bool,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default DialogContent;","import generateUtilityClasses from '@mui/utils/generateUtilityClasses';\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\nexport function getDialogActionsUtilityClass(slot) {\n  return generateUtilityClass('MuiDialogActions', slot);\n}\nconst dialogActionsClasses = generateUtilityClasses('MuiDialogActions', ['root', 'spacing']);\nexport default dialogActionsClasses;","'use client';\n\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport composeClasses from '@mui/utils/composeClasses';\nimport { styled } from \"../zero-styled/index.js\";\nimport { useDefaultProps } from \"../DefaultPropsProvider/index.js\";\nimport { getDialogActionsUtilityClass } from \"./dialogActionsClasses.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    disableSpacing\n  } = ownerState;\n  const slots = {\n    root: ['root', !disableSpacing && 'spacing']\n  };\n  return composeClasses(slots, getDialogActionsUtilityClass, classes);\n};\nconst DialogActionsRoot = styled('div', {\n  name: 'MuiDialogActions',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, !ownerState.disableSpacing && styles.spacing];\n  }\n})({\n  display: 'flex',\n  alignItems: 'center',\n  padding: 8,\n  justifyContent: 'flex-end',\n  flex: '0 0 auto',\n  variants: [{\n    props: ({\n      ownerState\n    }) => !ownerState.disableSpacing,\n    style: {\n      '& > :not(style) ~ :not(style)': {\n        marginLeft: 8\n      }\n    }\n  }]\n});\nconst DialogActions = /*#__PURE__*/React.forwardRef(function DialogActions(inProps, ref) {\n  const props = useDefaultProps({\n    props: inProps,\n    name: 'MuiDialogActions'\n  });\n  const {\n    className,\n    disableSpacing = false,\n    ...other\n  } = props;\n  const ownerState = {\n    ...props,\n    disableSpacing\n  };\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(DialogActionsRoot, {\n    className: clsx(classes.root, className),\n    ownerState: ownerState,\n    ref: ref,\n    ...other\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? DialogActions.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * If `true`, the actions do not have additional margin.\n   * @default false\n   */\n  disableSpacing: PropTypes.bool,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default DialogActions;","\"use client\";\n\nimport createSvgIcon from \"./utils/createSvgIcon.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon(/*#__PURE__*/_jsx(\"path\", {\n  d: \"M19 13h-6v6h-2v-6H5v-2h6V5h2v6h6z\"\n}), 'Add');","\"use client\";\n\nimport createSvgIcon from \"./utils/createSvgIcon.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon(/*#__PURE__*/_jsx(\"path\", {\n  d: \"M6 19c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V7H6zM19 4h-3.5l-1-1h-5l-1 1H5v2h14z\"\n}), 'Delete');","import React, { useState, useEffect, memo } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport {\n  Box,\n  Container,\n  Typography,\n  Button,\n  IconButton,\n  AppBar,\n  Toolbar,\n  CircularProgress,\n  Snackbar,\n  Alert,\n  Dialog,\n  DialogTitle,\n  DialogContent,\n  DialogActions,\n  Divider,\n} from '@mui/material';\nimport ArrowBackIcon from '@mui/icons-material/ArrowBack';\nimport AddIcon from '@mui/icons-material/Add';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport Routes from '../routes/Routes';\nimport { getPlayers, addGame, updatePlayersBalancesAfterGame } from '../data/firebase';\nimport { Player, GamePlayer } from '../data/models';\n\n// הגדרת ממשק לשורת משחק\ninterface GameRow {\n  id: string;\n  playerName: string;\n  buyIn: number;\n  cashOut: number;\n}\n\n// הגדרת ממשק לפרופס של קומפוננטת שורת משחק\ninterface GameRowComponentProps {\n  row: GameRow;\n  players: Player[];\n  onPlayerSelect: (rowId: string, e: React.ChangeEvent<HTMLSelectElement>) => void;\n  onUpdateBuyIn: (rowId: string, value: string) => void;\n  onUpdateCashOut: (rowId: string, value: string) => void;\n  getProfit: (row: GameRow) => number;\n}\n\nconst GameRowComponent = memo<GameRowComponentProps>(({ \n  row, \n  players, \n  onPlayerSelect, \n  onUpdateBuyIn, \n  onUpdateCashOut,\n  getProfit \n}) => {\n  return (\n    <Box \n      sx={{ \n        display: 'grid', \n        gridTemplateColumns: '40% 30% 30%', \n        gap: { xs: '5px', sm: '10px' }, \n        mb: { xs: '5px', sm: '10px' } \n      }}\n    >\n      <Box>\n        <select \n          value={row.playerName} \n          onChange={(e) => onPlayerSelect(row.id, e)}\n          style={{ \n            width: '100%', \n            padding: '8px', \n            borderRadius: '28px', \n            border: '1px solid #e0e0e0',\n            fontSize: '14px'\n          }}\n        >\n          <option value=\"\">Select player</option>\n          {players.map((player: Player) => (\n            <option key={player.id} value={player.name}>\n              {player.name}\n            </option>\n          ))}\n        </select>\n      </Box>\n      <Box>\n        <input\n          type=\"number\"\n          value={row.buyIn || ''}\n          onChange={(e) => {\n            if (e.target.value !== undefined) {\n              onUpdateBuyIn(row.id, e.target.value);\n            }\n          }}\n          style={{ \n            width: '80%', \n            padding: '8px', \n            borderRadius: '28px', \n            border: '1px solid #e0e0e0',\n            textAlign: 'center',\n            fontSize: '14px'\n          }}\n        />\n      </Box>\n      <Box>\n        <input\n          type=\"number\"\n          value={row.cashOut || ''}\n          onChange={(e) => {\n            if (e.target.value !== undefined) {\n              onUpdateCashOut(row.id, e.target.value);\n            }\n          }}\n          style={{ \n            width: '80%', \n            padding: '8px', \n            borderRadius: '28px', \n            border: '1px solid #e0e0e0',\n            backgroundColor: getProfit(row) > 0 ? '#e8eaf6' : 'white',\n            textAlign: 'center',\n            fontSize: '14px'\n          }}\n        />\n      </Box>\n    </Box>\n  );\n});\n\nconst StartGameScreen: React.FC = () => {\n  const navigate = useNavigate();\n  const [players, setPlayers] = useState<Player[]>([]);\n  const [gameRows, setGameRows] = useState<GameRow[]>([\n    { id: '1', playerName: '', buyIn: 0, cashOut: 0 },\n    { id: '2', playerName: '', buyIn: 0, cashOut: 0 },\n    { id: '3', playerName: '', buyIn: 0, cashOut: 0 },\n    { id: '4', playerName: '', buyIn: 0, cashOut: 0 }\n  ]);\n  const [loading, setLoading] = useState(false);\n  const [snackbarOpen, setSnackbarOpen] = useState(false);\n  const [snackbarMessage, setSnackbarMessage] = useState('');\n  const [snackbarSeverity, setSnackbarSeverity] = useState<'success' | 'error'>('success');\n  const [dialogOpen, setDialogOpen] = useState(false);\n  const [gameResults, setGameResults] = useState<GamePlayer[]>([]);\n  const [transfers, setTransfers] = useState<{from: string, to: string, amount: number}[]>([]);\n\n  // Load players on component mount\n  useEffect(() => {\n    loadPlayers();\n  }, []);\n\n  // Debug players after loading\n  useEffect(() => {\n    console.log(\"Players state updated:\", players);\n  }, [players]);\n\n  const loadPlayers = async () => {\n    setLoading(true);\n    try {\n      const playersList = await getPlayers();\n      console.log(\"Loaded players:\", playersList);\n      setPlayers(playersList);\n    } catch (error) {\n      console.error('Error loading players:', error);\n      showSnackbar('Failed to load players', 'error');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const addRow = () => {\n    if (gameRows.length >= 9) {\n      showSnackbar('Maximum 9 players allowed', 'error');\n      return { success: false, message: 'Maximum 9 players allowed' };\n    }\n    \n    setGameRows([\n      ...gameRows,\n      { id: Date.now().toString(), playerName: '', buyIn: 0, cashOut: 0 }\n    ]);\n    return { success: true, message: '' };\n  };\n\n  const removeRow = (id: string) => {\n    if (gameRows.length <= 4) {\n      showSnackbar('Minimum 4 players required', 'error');\n      return { success: false, message: 'Minimum 4 players required' };\n    }\n    \n    setGameRows(gameRows.filter(row => row.id !== id));\n    return { success: true, message: '' };\n  };\n\n  const handlePlayerSelect = (rowId: string, e: React.ChangeEvent<HTMLSelectElement>) => {\n    const playerName = e.target.value;\n    console.log(\"Selected player name:\", playerName, \"for row:\", rowId);\n    \n    if (!playerName) return;\n    \n    const updatedRows = gameRows.map(row => {\n      if (row.id === rowId) {\n        return {\n          ...row,\n          playerName: playerName\n        };\n      }\n      return row;\n    });\n    \n    console.log(\"Setting new rows:\", updatedRows);\n    setGameRows(updatedRows);\n  };\n\n  const handleUpdateBuyIn = (rowId: string, value: string) => {\n    const numericValue = value === '' ? 0 : parseInt(value);\n    if (isNaN(numericValue)) return;\n    \n    setGameRows(gameRows.map(row => \n      row.id === rowId ? { ...row, buyIn: numericValue } : row\n    ));\n  };\n\n  const handleUpdateCashOut = (rowId: string, value: string) => {\n    const numericValue = value === '' ? 0 : parseInt(value);\n    if (isNaN(numericValue)) return;\n    \n    setGameRows(gameRows.map(row => \n      row.id === rowId ? { ...row, cashOut: numericValue } : row\n    ));\n  };\n\n  const calculateTransfers = (players: GamePlayer[]): {from: string, to: string, amount: number}[] => {\n    const transfers: {from: string, to: string, amount: number}[] = [];\n    const losers = players.filter(p => p.profit < 0).sort((a, b) => a.profit - b.profit);\n    const winners = players.filter(p => p.profit > 0).sort((a, b) => b.profit - a.profit);\n    \n    let loserIndex = 0;\n    let winnerIndex = 0;\n    \n    while (loserIndex < losers.length && winnerIndex < winners.length) {\n      const loser = losers[loserIndex];\n      const winner = winners[winnerIndex];\n      \n      const transferAmount = Math.min(Math.abs(loser.profit), winner.profit);\n      \n      if (transferAmount > 0) {\n        transfers.push({\n          from: loser.playerName,\n          to: winner.playerName,\n          amount: transferAmount\n        });\n      }\n      \n      loser.profit += transferAmount;\n      winner.profit -= transferAmount;\n      \n      if (Math.abs(loser.profit) < 0.01) loserIndex++;\n      if (Math.abs(winner.profit) < 0.01) winnerIndex++;\n    }\n    \n    return transfers;\n  };\n\n  const handleFinishGame = () => {\n    if (gameRows.length === 0) {\n      showSnackbar('Please add at least one player', 'error');\n      return;\n    }\n\n    // Validate rows\n    const gamePlayers: GamePlayer[] = [];\n\n    for (const row of gameRows) {\n      if (!row.playerName) {\n        showSnackbar('All rows must have a player selected', 'error');\n        return;\n      }\n\n      // Find the player's ID from the players list\n      const playerInfo = players.find(p => p.name === row.playerName);\n      const playerId = playerInfo ? playerInfo.id : '';\n\n      const gamePlayer: GamePlayer = {\n        playerId: playerId,\n        playerName: row.playerName,\n        buyIn: row.buyIn,\n        cashOut: row.cashOut,\n        profit: row.cashOut - row.buyIn\n      };\n      \n      gamePlayers.push(gamePlayer);\n    }\n\n    // Calculate total profit/loss to ensure game balance\n    const totalProfit = gamePlayers.reduce((sum, player) => sum + player.profit, 0);\n    if (Math.abs(totalProfit) > 0.01) { // Allow for small floating point errors\n      showSnackbar('Game is not balanced. Total profit/loss should be zero.', 'error');\n      return;\n    }\n\n    // Create a deep copy of gamePlayers for transfers calculation\n    const gamePlayersForTransfers = gamePlayers.map(player => ({...player}));\n    \n    setGameResults(gamePlayers);\n    setTransfers(calculateTransfers(gamePlayersForTransfers));\n    setDialogOpen(true);\n  };\n\n  const confirmFinishGame = async () => {\n    setLoading(true);\n    try {\n      // המרת שורות המשחק לשחקני משחק\n      const selectedPlayers = gameRows.map(row => ({\n        playerName: row.playerName,\n        buyIn: row.buyIn,\n        cashOut: row.cashOut,\n        profit: row.cashOut - row.buyIn\n      }));\n\n      const today = new Date();\n      const dateString = today.toISOString().split('T')[0];\n\n      const gameData = {\n        date: dateString,\n        players: selectedPlayers\n      };\n      \n      await addGame(gameData);\n      await updatePlayersBalancesAfterGame(gameData);\n      \n      showSnackbar('Game finished successfully', 'success');\n      setDialogOpen(false);\n      \n      // איפוס הטופס\n      setGameRows([\n        { id: '1', playerName: '', buyIn: 0, cashOut: 0 },\n        { id: '2', playerName: '', buyIn: 0, cashOut: 0 },\n        { id: '3', playerName: '', buyIn: 0, cashOut: 0 },\n        { id: '4', playerName: '', buyIn: 0, cashOut: 0 }\n      ]);\n    } catch (error) {\n      console.error('Error finishing game:', error);\n      showSnackbar('Failed to finish game', 'error');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const showSnackbar = (message: string, severity: 'success' | 'error') => {\n    setSnackbarMessage(message);\n    setSnackbarSeverity(severity);\n    setSnackbarOpen(true);\n  };\n\n  const handleCloseSnackbar = () => {\n    setSnackbarOpen(false);\n  };\n\n  // Helper to determine if a row has profit\n  const getProfit = (row: GameRow) => row.cashOut - row.buyIn;\n\n  return (\n    <Box sx={{ minHeight: '100vh', bgcolor: 'background.default' }}>\n      <AppBar position=\"static\" color=\"primary\">\n        <Toolbar>\n          <IconButton\n            edge=\"start\"\n            color=\"inherit\"\n            aria-label=\"back\"\n            onClick={() => navigate(Routes.HOME)}\n          >\n            <ArrowBackIcon />\n          </IconButton>\n          <Typography variant=\"h6\" component=\"div\" sx={{ flexGrow: 1, textAlign: 'center' }}>\n            New Game\n          </Typography>\n        </Toolbar>\n      </AppBar>\n\n      <Container maxWidth=\"sm\" sx={{ py: { xs: 2, sm: 3 } }}>\n        <Box sx={{ mb: { xs: 2, sm: 4 } }}>\n          <Box \n            sx={{ \n              display: 'grid', \n              gridTemplateColumns: '40% 30% 30%', \n              gap: { xs: '5px', sm: '10px' }, \n              mb: { xs: '5px', sm: '10px' },\n              fontWeight: 'bold',\n              fontSize: { xs: '14px', sm: '16px' }\n            }}\n          >\n            <Box>Name</Box>\n            <Box sx={{ textAlign: 'center' }}>Buy</Box>\n            <Box sx={{ textAlign: 'center' }}>Return</Box>\n          </Box>\n          \n          {gameRows.map((row) => (\n            <GameRowComponent \n              key={row.id}\n              row={row}\n              players={players}\n              onPlayerSelect={handlePlayerSelect}\n              onUpdateBuyIn={handleUpdateBuyIn}\n              onUpdateCashOut={handleUpdateCashOut}\n              getProfit={getProfit}\n            />\n          ))}\n        </Box>\n\n        <Box sx={{ display: 'flex', justifyContent: 'center', mt: { xs: 1, sm: 2 }, gap: { xs: 1, sm: 2 } }}>\n          <IconButton \n            sx={{ \n              bgcolor: '#424242', \n              color: 'white', \n              '&:hover': { bgcolor: '#616161' },\n              width: { xs: '40px', sm: '48px' },\n              height: { xs: '40px', sm: '48px' }\n            }}\n            onClick={() => {\n              const result = addRow();\n              if (!result.success) {\n                showSnackbar(result.message, 'error');\n              }\n            }}\n            disabled={gameRows.length >= 9}\n          >\n            <AddIcon fontSize=\"small\" />\n          </IconButton>\n          <IconButton \n            sx={{ \n              bgcolor: '#424242', \n              color: 'white', \n              '&:hover': { bgcolor: '#616161' },\n              width: { xs: '40px', sm: '48px' },\n              height: { xs: '40px', sm: '48px' }\n            }}\n            onClick={() => {\n              if (gameRows.length > 0) {\n                const lastRow = gameRows[gameRows.length - 1];\n                const result = removeRow(lastRow.id);\n                if (!result.success) {\n                  showSnackbar(result.message, 'error');\n                }\n              }\n            }}\n            disabled={gameRows.length <= 4}\n          >\n            <DeleteIcon fontSize=\"small\" />\n          </IconButton>\n        </Box>\n\n        <Box sx={{ display: 'flex', justifyContent: 'center', mt: { xs: 2, sm: 3 } }}>\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            size=\"large\"\n            onClick={handleFinishGame}\n            disabled={loading}\n            sx={{ \n              bgcolor: '#424242', \n              color: 'white', \n              borderRadius: '4px',\n              textTransform: 'none',\n              py: { xs: 1, sm: 1.5 },\n              width: '100%',\n              maxWidth: { xs: '180px', sm: '200px' },\n              fontSize: { xs: '14px', sm: '16px' },\n              '&:hover': { bgcolor: '#616161' }\n            }}\n          >\n            {loading ? <CircularProgress size={20} /> : 'Finish Game'}\n          </Button>\n        </Box>\n      </Container>\n\n      <Snackbar\n        open={snackbarOpen}\n        autoHideDuration={6000}\n        onClose={handleCloseSnackbar}\n        anchorOrigin={{ vertical: 'bottom', horizontal: 'center' }}\n        sx={{ bottom: { xs: 16, sm: 24 } }}\n      >\n        <Alert\n          onClose={handleCloseSnackbar}\n          severity={snackbarSeverity}\n          sx={{ width: '100%' }}\n        >\n          {snackbarMessage}\n        </Alert>\n      </Snackbar>\n\n      <Dialog\n        open={dialogOpen}\n        onClose={() => setDialogOpen(false)}\n        maxWidth=\"sm\"\n        fullWidth\n        sx={{\n          '& .MuiDialog-paper': {\n            width: { xs: '95%', sm: '80%' },\n            maxWidth: { xs: '95%', sm: '500px' },\n            m: { xs: 1, sm: 2 }\n          }\n        }}\n      >\n        <DialogTitle sx={{ fontSize: { xs: '18px', sm: '20px' } }}>Game Results</DialogTitle>\n        <DialogContent>\n          <Box sx={{ mt: 2 }}>\n            <Typography variant=\"h6\" gutterBottom sx={{ fontSize: { xs: '16px', sm: '18px' } }}>Final Balances:</Typography>\n            {gameResults.map((player) => (\n              <Typography \n                key={player.playerName} \n                color={player.profit > 0 ? \"success.main\" : player.profit < 0 ? \"error.main\" : \"text.primary\"}\n                sx={{ mb: 1, fontWeight: 500, fontSize: { xs: '14px', sm: '16px' } }}\n              >\n                {player.playerName}: {player.profit > 0 ? '+' : ''}{player.profit} \n                ({player.buyIn} → {player.cashOut})\n              </Typography>\n            ))}\n            \n            <Divider sx={{ my: 3 }} />\n            \n            <Typography variant=\"h6\" gutterBottom sx={{ fontSize: { xs: '16px', sm: '18px' } }}>Required Transfers:</Typography>\n            {transfers.map((transfer, index) => (\n              <Typography key={index} sx={{ mb: 1, fontWeight: 500, fontSize: { xs: '14px', sm: '16px' } }}>\n                {transfer.from} → {transfer.to}: ₪{transfer.amount}\n              </Typography>\n            ))}\n          </Box>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={() => setDialogOpen(false)} color=\"secondary\">\n            Cancel\n          </Button>\n          <Button onClick={confirmFinishGame} color=\"primary\" disabled={loading}>\n            {loading ? <CircularProgress size={20} /> : 'Confirm'}\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </Box>\n  );\n};\n\nexport default StartGameScreen; ","import { initializeApp } from 'firebase/app';\nimport { \n  getDatabase, \n  ref, \n  set, \n  push, \n  get, \n  remove, \n  update,\n  query,\n  orderByChild,\n  startAt,\n  endAt\n} from 'firebase/database';\nimport { Player, Game, Transfer } from './models';\n\n// נגדיר את הטיפוס ישירות בקובץ במקום לייבא אותו\ninterface GamePlayerData {\n  playerName: string;\n  buyIn: number;\n  cashOut: number;\n  profit: number;\n}\n\n// Firebase configuration - replace with your own config\nconst firebaseConfig = {\n  // כאן הכנס את פרטי הקונפיגורציה האמיתיים שלך\n  apiKey: \"AIzaSyB_C62gqBeFuCIEkMrUr3tdEWTCIZX7RyA\",\n  authDomain: \"poker-967ea.firebaseapp.com\",\n  // השאר שדה זה ריק בכוונה\n  // databaseURL: \"https://poker-967ea.firebaseio.com\",\n  projectId: \"poker-967ea\",\n  storageBucket: \"poker-967ea.firebasestorage.app\",\n  messagingSenderId: \"349597163789\",\n  appId: \"1:349597163789:android:c2f23b99100e2176b81044\"\n};\n// Initialize Firebase\nconst app = initializeApp(firebaseConfig);\nconst database = getDatabase(app);\n\n\n// Players API\nexport const playersRef = ref(database, 'PlayersList');\n\nexport const addPlayer = async (name: string): Promise<string> => {\n  const newPlayerRef = push(playersRef);\n  const playerId = newPlayerRef.key as string;\n  \n  await set(newPlayerRef, {\n    id: playerId,\n    name: name,\n    balance: 0\n  });\n  \n  return playerId;\n};\n\nexport const getPlayers = async (): Promise<Player[]> => {\n  const snapshot = await get(playersRef);\n  const players: Player[] = [];\n  \n  if (snapshot.exists()) {\n    snapshot.forEach((childSnapshot) => {\n      const player = childSnapshot.val() as Player;\n      player.id = childSnapshot.key as string;\n      players.push(player);\n    });\n  }\n  \n  return players;\n};\n\nexport const updatePlayerBalance = async (playerId: string, newBalance: number): Promise<void> => {\n  console.log(\"Updating player balance for playerId:\", playerId, \"to newBalance:\", newBalance);\n  const playerRef = ref(database, `PlayersList/${playerId}`);\n  await update(playerRef, { balance: newBalance });\n};\n\n// Date list API\nexport const datesListRef = ref(database, 'dateList');\n\nexport const getDateList = async (): Promise<{ date: string, key: string }[]> => {\n  const snapshot = await get(datesListRef);\n  const dates: { date: string, key: string }[] = [];\n  \n  if (snapshot.exists()) {\n    snapshot.forEach((childSnapshot) => {\n      const date = childSnapshot.child('date').val() as string;\n      if (date) {\n        dates.push({\n          date: date,\n          key: childSnapshot.key as string\n        });\n      }\n    });\n  }\n  \n  // Sort dates in descending order (newest first)\n  return dates.sort((a, b) => new Date(b.date).getTime() - new Date(a.date).getTime());\n};\n\nexport const addDateToList = async (date: string): Promise<string> => {\n  // Extract just the date part (YYYY-MM-DD) from the date string\n  const datePart = date.split('T')[0];\n  \n  // Create a new entry in the dateList\n  const newDateRef = push(datesListRef);\n  const dateId = newDateRef.key as string;\n  \n  await set(newDateRef, {\n    date: datePart\n  });\n  \n  return dateId;\n};\n\n// Games API\nexport const gamesRef = ref(database, 'Games');\nexport const datesRef = ref(database, 'dateList');\n\nexport const addGame = async (gameData: { date: string, players: GamePlayerData[] }): Promise<string> => {\n  try {\n    // יצירת מזהה חדש עבור הרשומה של התאריך\n    const newDateRef = push(datesRef);\n    const dateId = newDateRef.key as string;\n    \n    if (!dateId) {\n      throw new Error('Failed to generate date ID');\n    }\n    \n    // שמירת פרטי התאריך\n    const dateData = {\n      date: gameData.date\n    };\n    \n    // שמירת התאריך\n    await set(newDateRef, dateData);\n    \n    // יצירת התייחסות לקולקציית שחקנים תחת התאריך הזה\n    const playerBalanceRef = ref(database, `dateList/${dateId}/playerBalance`);\n    \n    // שמירת כל שחקן עם המאזן שלו\n    for (const player of gameData.players) {\n      // יצירת מזהה חדש עבור כל שחקן\n      const playerRef = push(playerBalanceRef);\n      const playerId = playerRef.key;\n      \n      if (!playerId) {\n        throw new Error('Failed to generate player ID');\n      }\n      \n      // שמירת פרטי השחקן והמאזן שלו\n      const playerData = {\n        name: player.playerName,\n        balance: player.profit // או cashOut - buyIn\n      };\n      \n      await set(playerRef, playerData);\n    }\n    \n    return dateId;\n  } catch (error) {\n    console.error(\"Error adding game:\", error);\n    throw error;\n  }\n};\n\nexport const getGamesByDate = async (dateOrKey: string): Promise<Game[]> => {\n  // First, check if we're getting games by a dateList key\n  const dateListRef = ref(database, `dateList/${dateOrKey}`);\n  const dateSnapshot = await get(dateListRef);\n  \n  let dateString = dateOrKey;\n  \n  // If a valid date key was provided, get the date string from it\n  if (dateSnapshot.exists()) {\n    const date = dateSnapshot.child('date').val() as string;\n    if (date) {\n      dateString = date;\n    }\n  }\n  \n  // Use orderByChild and startAt/endAt for more efficient querying\n  // This filters the games on the server side before data is sent to client\n  const startDate = `${dateString}T00:00:00.000Z`;\n  const endDate = `${dateString}T23:59:59.999Z`;\n  \n  const gamesQuery = query(\n    gamesRef,\n    orderByChild('date'),\n    startAt(startDate),\n    endAt(endDate)\n  );\n  \n  const snapshot = await get(gamesQuery);\n  const games: Game[] = [];\n  \n  if (snapshot.exists()) {\n    snapshot.forEach((childSnapshot) => {\n      const game = childSnapshot.val() as Game;\n      games.push(game);\n    });\n  }\n  \n  return games;\n};\n\nexport const getAllGameDates = async (limit: number = 10, startDate?: string): Promise<string[]> => {\n  let gamesQuery;\n  \n  if (startDate) {\n    // Query games with dates before the startDate (for pagination)\n    gamesQuery = query(\n      gamesRef,\n      orderByChild('date'),\n      endAt(startDate)\n    );\n  } else {\n    // Query all games\n    gamesQuery = query(gamesRef, orderByChild('date'));\n  }\n  \n  const snapshot = await get(gamesQuery);\n  const dates = new Set<string>();\n  \n  if (snapshot.exists()) {\n    // Convert to array to handle pagination properly\n    const games: Game[] = [];\n    snapshot.forEach((childSnapshot) => {\n      games.push(childSnapshot.val() as Game);\n    });\n    \n    // Sort in reverse order (most recent first)\n    games.sort((a, b) => b.date.localeCompare(a.date));\n    \n    // Extract unique dates\n    for (const game of games) {\n      const datePart = game.date.split('T')[0];\n      dates.add(datePart);\n      \n      // Exit early if we've reached the limit\n      if (limit > 0 && dates.size >= limit) {\n        break;\n      }\n    }\n  }\n  \n  // Convert Set to Array and sort in descending order (newest first)\n  return Array.from(dates).sort().reverse();\n};\n\n// Transfers API\nexport const transfersRef = ref(database, 'Transfers');\n\nexport const addTransfer = async (transfer: Omit<Transfer, 'id'>): Promise<string> => {\n  const newTransferRef = push(transfersRef);\n  const transferId = newTransferRef.key as string;\n  \n  await set(newTransferRef, {\n    ...transfer,\n    id: transferId\n  });\n  \n  return transferId;\n};\n\nexport const getTransfers = async (): Promise<Transfer[]> => {\n  const snapshot = await get(transfersRef);\n  const transfers: Transfer[] = [];\n  \n  if (snapshot.exists()) {\n    snapshot.forEach((childSnapshot) => {\n      const transfer = childSnapshot.val() as Transfer;\n      transfers.push(transfer);\n    });\n  }\n  \n  return transfers;\n};\n\n// Player balance by date API\nexport const getPlayerBalanceByDate = async (dateKey: string): Promise<Player[]> => {\n  if (!dateKey) {\n    throw new Error(\"Please select a date\");\n  }\n  \n  const balanceRef = ref(database, `dateList/${dateKey}/playerBalance`);\n  const snapshot = await get(balanceRef);\n  const players: Player[] = [];\n  \n  if (snapshot.exists()) {\n    snapshot.forEach((playerSnapshot) => {\n      const name = playerSnapshot.child('name').val() as string;\n      const balance = playerSnapshot.child('balance').val() as number;\n      const id = playerSnapshot.key as string;\n      \n      if (name && balance !== undefined) {\n        players.push({\n          id,\n          name,\n          balance\n        });\n      }\n    });\n  }\n  \n  // Sort players by balance in descending order\n  return players.sort((a, b) => b.balance - a.balance);\n};\n\n/**\n * Updates the balances of all players after a game is finished\n * @param gameData - The data about the game including players and their profits\n * @returns Promise that resolves when all player balances have been updated\n */\nexport const updatePlayersBalancesAfterGame = async (gameData: { players: GamePlayerData[] }): Promise<void> => {\n  try {\n    // Get all players from the database\n    const allPlayers = await getPlayers();\n    \n    // Create a mapping for quick lookup of player data by name\n    const gamePlayerMap = new Map<string, GamePlayerData>();\n    gameData.players.forEach(player => {\n      gamePlayerMap.set(player.playerName, player);\n    });\n    \n    // Process each player\n    const updatePromises = allPlayers.map(player => {\n      // Check if this player participated in the game\n      const gamePlayerData = gamePlayerMap.get(player.name);\n      \n      if (gamePlayerData) {\n        // Calculate new balance\n        const newBalance = player.balance + gamePlayerData.profit;\n        \n        // Update the player's balance in the database\n        return updatePlayerBalance(player.id, newBalance);\n      }\n      \n      // Player didn't participate, no update needed\n      return Promise.resolve();\n    });\n    \n    // Wait for all updates to complete\n    await Promise.all(updatePromises);\n    \n  } catch (error) {\n    console.error(\"Error updating player balances after game:\", error);\n    throw error;\n  }\n}; "],"names":["getDialogUtilityClass","slot","generateUtilityClass","generateUtilityClasses","React","DialogBackdrop","styled","Backdrop","name","overrides","props","styles","backdrop","zIndex","DialogRoot","Modal","overridesResolver","root","position","DialogContainer","ownerState","container","capitalize","scroll","height","outline","variants","style","display","justifyContent","alignItems","overflowY","overflowX","textAlign","content","verticalAlign","width","DialogPaper","Paper","paper","String","maxWidth","fullWidth","paperFullWidth","fullScreen","paperFullScreen","memoTheme","_ref","theme","margin","boxShadow","flexDirection","maxHeight","_ref2","breakpoints","unit","Math","max","values","xs","dialogClasses","paperScrollBody","down","Object","keys","filter","map","_ref3","_ref4","borderRadius","inProps","ref","useDefaultProps","useTheme","defaultTransitionDuration","enter","transitions","duration","enteringScreen","exit","leavingScreen","ariaDescribedby","ariaLabelledbyProp","ariaModal","BackdropComponent","BackdropProps","children","className","disableEscapeKeyDown","onBackdropClick","onClick","onClose","open","PaperComponent","PaperProps","slots","slotProps","TransitionComponent","Fade","transitionDuration","TransitionProps","other","classes","composeClasses","useUtilityClasses","backdropClick","ariaLabelledby","useId","dialogContextValue","titleId","externalForwardedProps","transition","RootSlot","rootSlotProps","useSlot","elementType","shouldForwardComponentProp","clsx","BackdropSlot","backdropSlotProps","PaperSlot","paperSlotProps","ContainerSlot","containerSlotProps","TransitionSlot","transitionSlotProps","additionalProps","appear","in","timeout","role","_jsx","closeAfterTransition","as","event","current","onMouseDown","target","currentTarget","elevation","DialogContext","Provider","value","getDialogTitleUtilityClass","DialogTitleRoot","Typography","padding","flex","id","idProp","component","variant","getDialogContentUtilityClass","DialogContentRoot","dividers","WebkitOverflowScrolling","borderTop","vars","palette","divider","borderBottom","dialogTitleClasses","paddingTop","getDialogActionsUtilityClass","DialogActionsRoot","disableSpacing","spacing","marginLeft","createSvgIcon","d","GameRowComponent","memo","row","players","onPlayerSelect","onUpdateBuyIn","onUpdateCashOut","getProfit","_jsxs","Box","sx","gridTemplateColumns","gap","sm","mb","playerName","onChange","e","border","fontSize","player","type","buyIn","undefined","cashOut","backgroundColor","StartGameScreen","navigate","useNavigate","setPlayers","useState","gameRows","setGameRows","loading","setLoading","snackbarOpen","setSnackbarOpen","snackbarMessage","setSnackbarMessage","snackbarSeverity","setSnackbarSeverity","dialogOpen","setDialogOpen","gameResults","setGameResults","transfers","setTransfers","useEffect","loadPlayers","console","log","async","playersList","getPlayers","error","showSnackbar","handlePlayerSelect","rowId","updatedRows","handleUpdateBuyIn","numericValue","parseInt","isNaN","handleUpdateCashOut","message","severity","handleCloseSnackbar","minHeight","bgcolor","AppBar","color","Toolbar","IconButton","edge","Routes","HOME","ArrowBackIcon","flexGrow","Container","py","fontWeight","mt","result","length","success","Date","now","toString","disabled","AddIcon","lastRow","DeleteIcon","Button","size","handleFinishGame","gamePlayers","playerInfo","find","p","gamePlayer","playerId","profit","push","totalProfit","reduce","sum","abs","gamePlayersForTransfers","losers","sort","a","b","winners","loserIndex","winnerIndex","loser","winner","transferAmount","min","from","to","amount","calculateTransfers","textTransform","CircularProgress","Snackbar","autoHideDuration","anchorOrigin","vertical","horizontal","bottom","Alert","Dialog","m","DialogTitle","DialogContent","gutterBottom","Divider","my","transfer","index","DialogActions","selectedPlayers","today","gameData","date","toISOString","split","addGame","updatePlayersBalancesAfterGame","app","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","database","getDatabase","playersRef","addPlayer","newPlayerRef","key","set","balance","snapshot","get","exists","forEach","childSnapshot","val","datesListRef","getDateList","dates","child","getTime","datesRef","newDateRef","dateId","Error","dateData","playerBalanceRef","playerRef","playerData","getPlayerBalanceByDate","dateKey","balanceRef","playerSnapshot","allPlayers","gamePlayerMap","Map","updatePromises","gamePlayerData","newBalance","update","updatePlayerBalance","Promise","resolve","all"],"sourceRoot":""}